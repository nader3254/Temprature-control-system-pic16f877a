

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 09 07:17:39 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.31
    44                           ; Generated 13/10/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  0000                     	;# 
   199  0001                     	;# 
   200  0002                     	;# 
   201  0003                     	;# 
   202  0004                     	;# 
   203  0005                     	;# 
   204  0006                     	;# 
   205  0007                     	;# 
   206  0008                     	;# 
   207  0009                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000D                     	;# 
   212  000E                     	;# 
   213  000E                     	;# 
   214  000F                     	;# 
   215  0010                     	;# 
   216  0011                     	;# 
   217  0012                     	;# 
   218  0013                     	;# 
   219  0014                     	;# 
   220  0015                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001D                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  0081                     	;# 
   234  0085                     	;# 
   235  0086                     	;# 
   236  0087                     	;# 
   237  0088                     	;# 
   238  0089                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  0091                     	;# 
   243  0092                     	;# 
   244  0093                     	;# 
   245  0094                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  009F                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  000E                     	;# 
   274  000F                     	;# 
   275  0010                     	;# 
   276  0011                     	;# 
   277  0012                     	;# 
   278  0013                     	;# 
   279  0014                     	;# 
   280  0015                     	;# 
   281  0015                     	;# 
   282  0016                     	;# 
   283  0017                     	;# 
   284  0018                     	;# 
   285  0019                     	;# 
   286  001A                     	;# 
   287  001B                     	;# 
   288  001B                     	;# 
   289  001C                     	;# 
   290  001D                     	;# 
   291  001E                     	;# 
   292  001F                     	;# 
   293  0081                     	;# 
   294  0085                     	;# 
   295  0086                     	;# 
   296  0087                     	;# 
   297  0088                     	;# 
   298  0089                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0093                     	;# 
   305  0094                     	;# 
   306  0098                     	;# 
   307  0099                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  0000                     	;# 
   319  0001                     	;# 
   320  0002                     	;# 
   321  0003                     	;# 
   322  0004                     	;# 
   323  0005                     	;# 
   324  0006                     	;# 
   325  0007                     	;# 
   326  0008                     	;# 
   327  0009                     	;# 
   328  000A                     	;# 
   329  000B                     	;# 
   330  000C                     	;# 
   331  000D                     	;# 
   332  000E                     	;# 
   333  000E                     	;# 
   334  000F                     	;# 
   335  0010                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0013                     	;# 
   339  0014                     	;# 
   340  0015                     	;# 
   341  0015                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001B                     	;# 
   349  001C                     	;# 
   350  001D                     	;# 
   351  001E                     	;# 
   352  001F                     	;# 
   353  0081                     	;# 
   354  0085                     	;# 
   355  0086                     	;# 
   356  0087                     	;# 
   357  0088                     	;# 
   358  0089                     	;# 
   359  008C                     	;# 
   360  008D                     	;# 
   361  008E                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  010F                     	;# 
   436  018C                     	;# 
   437  018D                     	;# 
   438  001E                     _ADRESH	set	30
   439  001F                     _ADCON0	set	31
   440  0006                     _PORTB	set	6
   441  0008                     _PORTDbits	set	8
   442  000C                     _PIR1bits	set	12
   443  0007                     _PORTCbits	set	7
   444  00FA                     _GO_DONE	set	250
   445  0066                     _ADIF	set	102
   446  005E                     _PEIE	set	94
   447  005F                     _GIE	set	95
   448  005C                     _INTE	set	92
   449  0059                     _INTF	set	89
   450  009E                     _ADRESL	set	158
   451  009F                     _ADCON1	set	159
   452  0087                     _TRISCbits	set	135
   453  0088                     _TRISDbits	set	136
   454  0086                     _TRISB	set	134
   455  0466                     _ADIE	set	1126
   456  040E                     _INTEDG	set	1038
   457                           
   458                           	psect	cinit
   459  0011                     start_initialization:	
   460                           ; #config settings
   461                           
   462  0011                     __initialization:
   463                           
   464                           ; Clear objects allocated to BANK0
   465  0011  1283               	bcf	3,5	;RP0=0, select bank0
   466  0012  1303               	bcf	3,6	;RP1=0, select bank0
   467  0013  01C6               	clrf	__pbssBANK0& (0+127)
   468  0014  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   469  0015  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   470  0016  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   471  0017  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   472                           
   473                           ; Clear objects allocated to BANK1
   474  0018  1683               	bsf	3,5	;RP0=1, select bank1
   475  0019  01BE               	clrf	__pbssBANK1& (0+127)
   476  001A  01BF               	clrf	(__pbssBANK1+1)& (0+127)
   477  001B  01C0               	clrf	(__pbssBANK1+2)& (0+127)
   478  001C                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  001C                     __end_of__initialization:
   482  001C  0183               	clrf	3
   483  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK0
   486  0046                     __pbssBANK0:
   487  0046                     _seven_data:
   488  0046                     	ds	2
   489  0048                     _Timeout_Action:
   490  0048                     	ds	1
   491  0049                     _X2:
   492  0049                     	ds	1
   493  004A                     _X:
   494  004A                     	ds	1
   495                           
   496                           	psect	bssBANK1
   497  00BE                     __pbssBANK1:
   498  00BE                     _display_desirered_value:
   499  00BE                     	ds	1
   500  00BF                     _current_temprature:
   501  00BF                     	ds	1
   502  00C0                     _desired_temprature:
   503  00C0                     	ds	1
   504                           
   505                           	psect	cstackBANK1
   506  00A0                     __pcstackBANK1:
   507  00A0                     ??_prepheral_testing:
   508  00A0                     ??_start_lm35:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  00A0                     ?___lwmod:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  00A0                     ___lwmod@divisor:	
   515                           ; 2 bytes @ 0x0
   516                           
   517                           
   518                           ; 2 bytes @ 0x0
   519  00A0                     	ds	2
   520  00A2                     ___lwmod@dividend:
   521                           
   522                           ; 2 bytes @ 0x2
   523  00A2                     	ds	1
   524  00A3                     prepheral_testing@i:
   525                           
   526                           ; 2 bytes @ 0x3
   527  00A3                     	ds	1
   528  00A4                     ___lwmod@counter:
   529                           
   530                           ; 1 bytes @ 0x4
   531  00A4                     	ds	1
   532  00A5                     ?___lwdiv:
   533  00A5                     prepheral_testing@i_204:	
   534                           ; 2 bytes @ 0x5
   535                           
   536  00A5                     ___lwdiv@divisor:	
   537                           ; 2 bytes @ 0x5
   538                           
   539                           
   540                           ; 2 bytes @ 0x5
   541  00A5                     	ds	2
   542  00A7                     ___lwdiv@dividend:
   543                           
   544                           ; 2 bytes @ 0x7
   545  00A7                     	ds	2
   546  00A9                     ??___lwdiv:
   547                           
   548                           ; 1 bytes @ 0x9
   549  00A9                     	ds	1
   550  00AA                     ___lwdiv@quotient:
   551                           
   552                           ; 2 bytes @ 0xA
   553  00AA                     	ds	2
   554  00AC                     ___lwdiv@counter:
   555                           
   556                           ; 1 bytes @ 0xC
   557  00AC                     	ds	1
   558  00AD                     ?_write_7seg:
   559  00AD                     write_7seg@x:	
   560                           ; 1 bytes @ 0xD
   561                           
   562                           
   563                           ; 2 bytes @ 0xD
   564  00AD                     	ds	2
   565  00AF                     ??_write_7seg:
   566                           
   567                           ; 1 bytes @ 0xF
   568  00AF                     	ds	2
   569  00B1                     write_7seg@d1:
   570                           
   571                           ; 1 bytes @ 0x11
   572  00B1                     	ds	1
   573  00B2                     write_7seg@d2:
   574                           
   575                           ; 1 bytes @ 0x12
   576  00B2                     	ds	1
   577  00B3                     ?_DEL_write_7seg:
   578  00B3                     DEL_write_7seg@val:	
   579                           ; 1 bytes @ 0x13
   580                           
   581                           
   582                           ; 2 bytes @ 0x13
   583  00B3                     	ds	2
   584  00B5                     DEL_write_7seg@time:
   585                           
   586                           ; 2 bytes @ 0x15
   587  00B5                     	ds	2
   588  00B7                     DEL_write_7seg@i:
   589                           
   590                           ; 2 bytes @ 0x17
   591  00B7                     	ds	2
   592  00B9                     ??_main:
   593                           
   594                           ; 1 bytes @ 0x19
   595  00B9                     	ds	3
   596  00BC                     main@i:
   597                           
   598                           ; 2 bytes @ 0x1C
   599  00BC                     	ds	2
   600                           
   601                           	psect	cstackCOMMON
   602  0070                     __pcstackCOMMON:
   603  0070                     ?_init_7seg:
   604  0070                     ?_init_lm35:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_init_switches:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_init_cooler_heater:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_prepheral_testing:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_start_lm35:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_heater_on:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_cooler_on:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_heater_off:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_cooler_off:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_reset_lm35:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ??_reset_lm35:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_sw_check:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ??_sw_check:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_selec_7seg:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_evaluate:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_ISR:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?i1_cooler_on:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ??i1_cooler_on:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?i1_heater_on:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??i1_heater_on:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?i1_cooler_off:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??i1_cooler_off:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?i1_heater_off:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??i1_heater_off:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_read_lm35:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?___ftpack:	
   683                           ; 2 bytes @ 0x0
   684                           
   685  0070                     ___ftpack@arg:	
   686                           ; 3 bytes @ 0x0
   687                           
   688                           
   689                           ; 3 bytes @ 0x0
   690  0070                     	ds	2
   691  0072                     ??_read_lm35:
   692                           
   693                           ; 1 bytes @ 0x2
   694  0072                     	ds	1
   695  0073                     ___ftpack@exp:
   696                           
   697                           ; 1 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     ___ftpack@sign:
   700                           
   701                           ; 1 bytes @ 0x4
   702  0074                     	ds	1
   703  0075                     ??___ftpack:
   704                           
   705                           ; 1 bytes @ 0x5
   706  0075                     	ds	3
   707  0078                     ?___awtoft:
   708  0078                     ___awtoft@c:	
   709                           ; 3 bytes @ 0x8
   710                           
   711                           
   712                           ; 2 bytes @ 0x8
   713  0078                     	ds	3
   714  007B                     ??___awtoft:
   715                           
   716                           ; 1 bytes @ 0xB
   717  007B                     	ds	2
   718  007D                     ___awtoft@sign:
   719                           
   720                           ; 1 bytes @ 0xD
   721  007D                     	ds	1
   722                           
   723                           	psect	cstackBANK0
   724  0020                     __pcstackBANK0:
   725  0020                     ?___ftmul:
   726  0020                     ___ftmul@f1:	
   727                           ; 3 bytes @ 0x0
   728                           
   729                           
   730                           ; 3 bytes @ 0x0
   731  0020                     	ds	3
   732  0023                     ___ftmul@f2:
   733                           
   734                           ; 3 bytes @ 0x3
   735  0023                     	ds	3
   736  0026                     ??___ftmul:
   737                           
   738                           ; 1 bytes @ 0x6
   739  0026                     	ds	4
   740  002A                     ___ftmul@exp:
   741                           
   742                           ; 1 bytes @ 0xA
   743  002A                     	ds	1
   744  002B                     ___ftmul@f3_as_product:
   745                           
   746                           ; 3 bytes @ 0xB
   747  002B                     	ds	3
   748  002E                     ___ftmul@cntr:
   749                           
   750                           ; 1 bytes @ 0xE
   751  002E                     	ds	1
   752  002F                     ___ftmul@sign:
   753                           
   754                           ; 1 bytes @ 0xF
   755  002F                     	ds	1
   756  0030                     ?___fttol:
   757  0030                     ___fttol@f1:	
   758                           ; 4 bytes @ 0x10
   759                           
   760                           
   761                           ; 3 bytes @ 0x10
   762  0030                     	ds	4
   763  0034                     ??___fttol:
   764                           
   765                           ; 1 bytes @ 0x14
   766  0034                     	ds	4
   767  0038                     ___fttol@sign1:
   768                           
   769                           ; 1 bytes @ 0x18
   770  0038                     	ds	1
   771  0039                     ___fttol@lval:
   772                           
   773                           ; 4 bytes @ 0x19
   774  0039                     	ds	4
   775  003D                     ___fttol@exp1:
   776                           
   777                           ; 1 bytes @ 0x1D
   778  003D                     	ds	1
   779  003E                     ??_ISR:
   780                           
   781                           ; 1 bytes @ 0x1E
   782  003E                     	ds	5
   783  0043                     ISR@tmp:
   784                           
   785                           ; 2 bytes @ 0x23
   786  0043                     	ds	2
   787  0045                     ??_init_7seg:
   788  0045                     ??_init_lm35:	
   789                           ; 1 bytes @ 0x25
   790                           
   791  0045                     ??_init_switches:	
   792                           ; 1 bytes @ 0x25
   793                           
   794  0045                     ??_init_cooler_heater:	
   795                           ; 1 bytes @ 0x25
   796                           
   797  0045                     ??_heater_on:	
   798                           ; 1 bytes @ 0x25
   799                           
   800  0045                     ??_cooler_on:	
   801                           ; 1 bytes @ 0x25
   802                           
   803  0045                     ??_heater_off:	
   804                           ; 1 bytes @ 0x25
   805                           
   806  0045                     ??_cooler_off:	
   807                           ; 1 bytes @ 0x25
   808                           
   809  0045                     ??_selec_7seg:	
   810                           ; 1 bytes @ 0x25
   811                           
   812  0045                     ??_evaluate:	
   813                           ; 1 bytes @ 0x25
   814                           
   815  0045                     ??___lwmod:	
   816                           ; 1 bytes @ 0x25
   817                           
   818  0045                     selec_7seg@sel:	
   819                           ; 1 bytes @ 0x25
   820                           
   821  0045                     evaluate@x:	
   822                           ; 1 bytes @ 0x25
   823                           
   824  0045                     start_lm35@channle:	
   825                           ; 1 bytes @ 0x25
   826                           
   827                           
   828                           ; 1 bytes @ 0x25
   829  0045                     	ds	1
   830  0046                     ??_DEL_write_7seg:
   831                           
   832                           	psect	maintext
   833  0020                     __pmaintext:	
   834                           ; 1 bytes @ 0x26
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 25 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  i               2   28[BANK1 ] int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 300/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       2       0       0
   856 ;;      Temps:          0       0       3       0       0
   857 ;;      Totals:         0       0       5       0       0
   858 ;;Total ram usage:        5 bytes
   859 ;; Hardware stack levels required when called:    6
   860 ;; This function calls:
   861 ;;		_DEL_write_7seg
   862 ;;		_cooler_off
   863 ;;		_cooler_on
   864 ;;		_heater_off
   865 ;;		_heater_on
   866 ;;		_init_7seg
   867 ;;		_init_cooler_heater
   868 ;;		_init_lm35
   869 ;;		_init_switches
   870 ;;		_prepheral_testing
   871 ;;		_start_lm35
   872 ;;		_write_7seg
   873 ;; This function is called by:
   874 ;;		Startup code after reset
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function _main
   880  0020                     _main:
   881                           
   882                           ;main.c: 29: init_7seg();
   883                           
   884                           ;incstack = 0
   885                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   886  0020  120A  118A  2571  120A  118A  	fcall	_init_7seg
   887                           
   888                           ;main.c: 30: init_lm35();
   889  0025  120A  118A  2559  120A  118A  	fcall	_init_lm35
   890                           
   891                           ;main.c: 31: init_switches();
   892  002A  120A  118A  2591  120A  118A  	fcall	_init_switches
   893                           
   894                           ;main.c: 32: init_cooler_heater();
   895  002F  120A  118A  254B  120A  118A  	fcall	_init_cooler_heater
   896                           
   897                           ;main.c: 34: prepheral_testing();
   898  0034  120A  118A  218C  120A  118A  	fcall	_prepheral_testing
   899                           
   900                           ;main.c: 36: start_lm35(0);
   901  0039  3000               	movlw	0
   902  003A  120A  118A  24D9  120A  118A  	fcall	_start_lm35
   903                           
   904                           ;main.c: 37: _delay((unsigned long)((1000)*(8000000/4000.0)));
   905  003F  300B               	movlw	11
   906  0040  1683               	bsf	3,5	;RP0=1, select bank1
   907  0041  1303               	bcf	3,6	;RP1=0, select bank1
   908  0042  00BB               	movwf	(??_main^(0+128)+2)
   909  0043  3026               	movlw	38
   910  0044  00BA               	movwf	(??_main^(0+128)+1)
   911  0045  305D               	movlw	93
   912  0046  00B9               	movwf	??_main^(0+128)
   913  0047                     u1707:
   914  0047  0BB9               	decfsz	??_main^(0+128),f
   915  0048  2847               	goto	u1707
   916  0049  0BBA               	decfsz	(??_main^(0+128)+1),f
   917  004A  2847               	goto	u1707
   918  004B  0BBB               	decfsz	(??_main^(0+128)+2),f
   919  004C  2847               	goto	u1707
   920                           
   921                           ;main.c: 38: desired_temprature = current_temprature;
   922  004D  1683               	bsf	3,5	;RP0=1, select bank1
   923  004E  1303               	bcf	3,6	;RP1=0, select bank1
   924  004F  083F               	movf	_current_temprature^(0+128),w
   925  0050  00B9               	movwf	??_main^(0+128)
   926  0051  0839               	movf	??_main^(0+128),w
   927  0052  00C0               	movwf	_desired_temprature^(0+128)
   928  0053                     l1852:
   929                           
   930                           ;main.c: 44: {;main.c: 46: start_lm35(0);
   931  0053  3000               	movlw	0
   932  0054  120A  118A  24D9  120A  118A  	fcall	_start_lm35
   933                           
   934                           ;main.c: 49: if(display_desirered_value == 1)
   935  0059  1683               	bsf	3,5	;RP0=1, select bank1
   936  005A  033E               	decf	_display_desirered_value^(0+128),w
   937  005B  1D03               	btfss	3,2
   938  005C  2884               	goto	l1870
   939                           
   940                           ;main.c: 50: {;main.c: 51: for(int i=0;i<900;i++)
   941  005D  01BC               	clrf	main@i^(0+128)
   942  005E  01BD               	clrf	(main@i+1)^(0+128)
   943  005F                     l1862:
   944                           
   945                           ;main.c: 52: {;main.c: 53: write_7seg(desired_temprature);
   946  005F  1683               	bsf	3,5	;RP0=1, select bank1
   947  0060  1303               	bcf	3,6	;RP1=0, select bank1
   948  0061  0840               	movf	_desired_temprature^(0+128),w
   949  0062  00B9               	movwf	??_main^(0+128)
   950  0063  01BA               	clrf	(??_main^(0+128)+1)
   951  0064  0839               	movf	??_main^(0+128),w
   952  0065  00AD               	movwf	write_7seg@x^(0+128)
   953  0066  083A               	movf	(??_main+1)^(0+128),w
   954  0067  00AE               	movwf	(write_7seg@x+1)^(0+128)
   955  0068  120A  118A  23C9  120A  118A  	fcall	_write_7seg
   956  006D  3001               	movlw	1
   957  006E  1683               	bsf	3,5	;RP0=1, select bank1
   958  006F  1303               	bcf	3,6	;RP1=0, select bank1
   959  0070  07BC               	addwf	main@i^(0+128),f
   960  0071  1803               	skipnc
   961  0072  0ABD               	incf	(main@i+1)^(0+128),f
   962  0073  3000               	movlw	0
   963  0074  07BD               	addwf	(main@i+1)^(0+128),f
   964  0075  083D               	movf	(main@i+1)^(0+128),w
   965  0076  3A80               	xorlw	128
   966  0077  00FF               	movwf	127
   967  0078  3083               	movlw	131
   968  0079  027F               	subwf	127,w
   969  007A  1D03               	skipz
   970  007B  287E               	goto	u1625
   971  007C  3084               	movlw	132
   972  007D  023C               	subwf	main@i^(0+128),w
   973  007E                     u1625:
   974  007E  1C03               	skipc
   975  007F  285F               	goto	l1862
   976                           
   977                           ;main.c: 54: };main.c: 56: display_desirered_value = 0;
   978  0080  1683               	bsf	3,5	;RP0=1, select bank1
   979  0081  1303               	bcf	3,6	;RP1=0, select bank1
   980  0082  01BE               	clrf	_display_desirered_value^(0+128)
   981                           
   982                           ;main.c: 57: }
   983  0083  2894               	goto	l1872
   984  0084                     l1870:
   985                           
   986                           ;main.c: 58: else;main.c: 59: {;main.c: 60: DEL_write_7seg(current_temprature,25);
   987  0084  083F               	movf	_current_temprature^(0+128),w
   988  0085  00B9               	movwf	??_main^(0+128)
   989  0086  01BA               	clrf	(??_main^(0+128)+1)
   990  0087  0839               	movf	??_main^(0+128),w
   991  0088  00B3               	movwf	DEL_write_7seg@val^(0+128)
   992  0089  083A               	movf	(??_main+1)^(0+128),w
   993  008A  00B4               	movwf	(DEL_write_7seg@val+1)^(0+128)
   994  008B  3019               	movlw	25
   995  008C  00B5               	movwf	DEL_write_7seg@time^(0+128)
   996  008D  3000               	movlw	0
   997  008E  00B6               	movwf	(DEL_write_7seg@time^(0+128)+1)
   998  008F  120A  118A  251C  120A  118A  	fcall	_DEL_write_7seg
   999  0094                     l1872:
  1000                           
  1001                           ;main.c: 61: };main.c: 65: if(desired_temprature > current_temprature)
  1002  0094  0840               	movf	_desired_temprature^(0+128),w
  1003  0095  023F               	subwf	_current_temprature^(0+128),w
  1004  0096  1803               	skipnc
  1005  0097  289D               	goto	l1876
  1006                           
  1007                           ;main.c: 66: {;main.c: 67: heater_on();
  1008  0098  120A  118A  2585  120A  118A  	fcall	_heater_on
  1009  009D                     l1876:
  1010                           
  1011                           ;main.c: 68: };main.c: 69: if(desired_temprature < current_temprature)
  1012  009D  1683               	bsf	3,5	;RP0=1, select bank1
  1013  009E  083F               	movf	_current_temprature^(0+128),w
  1014  009F  0240               	subwf	_desired_temprature^(0+128),w
  1015  00A0  1803               	skipnc
  1016  00A1  28A7               	goto	l1880
  1017                           
  1018                           ;main.c: 70: {;main.c: 71: cooler_on();
  1019  00A2  120A  118A  2594  120A  118A  	fcall	_cooler_on
  1020  00A7                     l1880:
  1021                           
  1022                           ;main.c: 72: };main.c: 75: if(desired_temprature == current_temprature)
  1023  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1024  00A8  0840               	movf	_desired_temprature^(0+128),w
  1025  00A9  063F               	xorwf	_current_temprature^(0+128),w
  1026  00AA  1D03               	skipz
  1027  00AB  28B6               	goto	l1884
  1028                           
  1029                           ;main.c: 76: {;main.c: 77: heater_off();
  1030  00AC  120A  118A  2580  120A  118A  	fcall	_heater_off
  1031                           
  1032                           ;main.c: 78: cooler_off();
  1033  00B1  120A  118A  259D  120A  118A  	fcall	_cooler_off
  1034  00B6                     l1884:
  1035                           
  1036                           ;main.c: 79: };main.c: 82: if((PORTCbits.RC4== 1) && (PORTCbits.RC5==1 ))
  1037  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1038  00B7  1A07               	btfsc	7,4	;volatile
  1039  00B8  1E87               	btfss	7,5	;volatile
  1040  00B9  2853               	goto	l1852
  1041                           
  1042                           ;main.c: 83: {;main.c: 84: heater_off(); cooler_off();
  1043  00BA  120A  118A  2580  120A  118A  	fcall	_heater_off
  1044  00BF  120A  118A  259D  120A  118A  	fcall	_cooler_off
  1045                           
  1046                           ;main.c: 85: if(desired_temprature > current_temprature)
  1047  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1048  00C5  0840               	movf	_desired_temprature^(0+128),w
  1049  00C6  023F               	subwf	_current_temprature^(0+128),w
  1050  00C7  1803               	skipnc
  1051  00C8  28CE               	goto	l1894
  1052                           
  1053                           ;main.c: 86: {;main.c: 87: heater_on();
  1054  00C9  120A  118A  2585  120A  118A  	fcall	_heater_on
  1055  00CE                     l1894:
  1056                           
  1057                           ;main.c: 88: };main.c: 89: if(desired_temprature < current_temprature)
  1058  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1059  00CF  083F               	movf	_current_temprature^(0+128),w
  1060  00D0  0240               	subwf	_desired_temprature^(0+128),w
  1061  00D1  1803               	skipnc
  1062  00D2  2853               	goto	l1852
  1063                           
  1064                           ;main.c: 90: {;main.c: 91: cooler_on();
  1065  00D3  120A  118A  2594  120A  118A  	fcall	_cooler_on
  1066  00D8  2853               	goto	l1852
  1067  00D9                     __end_of_main:
  1068                           
  1069                           	psect	text1
  1070  04D9                     __ptext1:	
  1071 ;; *************** function _start_lm35 *****************
  1072 ;; Defined at:
  1073 ;;		line 25 in file "lm35.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  channle         1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  channle         1   37[BANK0 ] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 300/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       1       0       0       0
  1089 ;;      Temps:          0       0       2       0       0
  1090 ;;      Totals:         0       1       2       0       0
  1091 ;;Total ram usage:        3 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    3
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _start_lm35
  1103  04D9                     _start_lm35:
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in _start_lm35: [wreg+status,2+status,0]
  1107                           ;start_lm35@channle stored from wreg
  1108  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1109  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1110  04DB  00C5               	movwf	start_lm35@channle
  1111                           
  1112                           ;lm35.c: 28: ADCON0 &= 0b11000101;
  1113  04DC  30C5               	movlw	197
  1114  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1115  04DE  00A0               	movwf	??_start_lm35^(0+128)
  1116  04DF  0820               	movf	??_start_lm35^(0+128),w
  1117  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1118  04E1  059F               	andwf	31,f	;volatile
  1119                           
  1120                           ;lm35.c: 29: ADCON0 |= channle<<3;
  1121  04E2  0845               	movf	start_lm35@channle,w
  1122  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  1123  04E4  00A0               	movwf	??_start_lm35^(0+128)
  1124  04E5  3002               	movlw	2
  1125  04E6                     u1595:
  1126  04E6  1003               	clrc
  1127  04E7  0DA0               	rlf	??_start_lm35^(0+128),f
  1128  04E8  3EFF               	addlw	-1
  1129  04E9  1D03               	skipz
  1130  04EA  2CE6               	goto	u1595
  1131  04EB  1003               	clrc
  1132  04EC  0D20               	rlf	??_start_lm35^(0+128),w
  1133  04ED  00A1               	movwf	(??_start_lm35+1)^(0+128)
  1134  04EE  0821               	movf	(??_start_lm35+1)^(0+128),w
  1135  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1136  04F0  049F               	iorwf	31,f	;volatile
  1137                           
  1138                           ;lm35.c: 30: _delay((unsigned long)((30)*(8000000/4000000.0)));
  1139  04F1  3013               	movlw	19
  1140  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  1141  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  1142  04F4  00A0               	movwf	??_start_lm35^(0+128)
  1143  04F5                     u1717:
  1144  04F5  0BA0               	decfsz	??_start_lm35^(0+128),f
  1145  04F6  2CF5               	goto	u1717
  1146                           
  1147                           ;lm35.c: 32: GO_DONE = 1;
  1148  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1149  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1150  04F9  151F               	bsf	31,2	;volatile
  1151  04FA  0008               	return
  1152  04FB                     __end_of_start_lm35:
  1153                           
  1154                           	psect	text2
  1155  018C                     __ptext2:	
  1156 ;; *************** function _prepheral_testing *****************
  1157 ;; Defined at:
  1158 ;;		line 182 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  i               2    5[BANK1 ] int 
  1163 ;;  i               2    3[BANK1 ] int 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 300/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       4       0       0
  1175 ;;      Temps:          0       0       3       0       0
  1176 ;;      Totals:         0       0       7       0       0
  1177 ;;Total ram usage:        7 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		_heater_off
  1182 ;;		_heater_on
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           
  1189                           ;psect for function _prepheral_testing
  1190  018C                     _prepheral_testing:
  1191                           
  1192                           ;main.c: 185: PORTDbits.RD7 = 0;
  1193                           
  1194                           ;incstack = 0
  1195                           ; Regs used in _prepheral_testing: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1196  018C  1388               	bcf	8,7	;volatile
  1197                           
  1198                           ;main.c: 186: for (int i=0;i<7;i++)
  1199  018D  1683               	bsf	3,5	;RP0=1, select bank1
  1200  018E  01A3               	clrf	prepheral_testing@i^(0+128)
  1201  018F  01A4               	clrf	(prepheral_testing@i+1)^(0+128)
  1202  0190                     l1786:
  1203                           
  1204                           ;main.c: 187: {;main.c: 188: PORTB = 0;
  1205  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0192  0186               	clrf	6	;volatile
  1208                           
  1209                           ;main.c: 189: PORTB |= (1<<i);
  1210  0193  3001               	movlw	1
  1211  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1212  0195  00A0               	movwf	??_prepheral_testing^(0+128)
  1213  0196  0A23               	incf	prepheral_testing@i^(0+128),w
  1214  0197  299A               	goto	u1554
  1215  0198                     u1555:
  1216  0198  1003               	clrc
  1217  0199  0DA0               	rlf	??_prepheral_testing^(0+128),f
  1218  019A                     u1554:
  1219  019A  3EFF               	addlw	-1
  1220  019B  1D03               	skipz
  1221  019C  2998               	goto	u1555
  1222  019D  0820               	movf	??_prepheral_testing^(0+128),w
  1223  019E  00A1               	movwf	(??_prepheral_testing+1)^(0+128)
  1224  019F  0821               	movf	(??_prepheral_testing+1)^(0+128),w
  1225  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1226  01A1  0486               	iorwf	6,f	;volatile
  1227                           
  1228                           ;main.c: 190: _delay((unsigned long)((150)*(8000000/4000.0)));
  1229  01A2  3002               	movlw	2
  1230  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1231  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1232  01A5  00A2               	movwf	(??_prepheral_testing^(0+128)+2)
  1233  01A6  3086               	movlw	134
  1234  01A7  00A1               	movwf	(??_prepheral_testing^(0+128)+1)
  1235  01A8  3098               	movlw	152
  1236  01A9  00A0               	movwf	??_prepheral_testing^(0+128)
  1237  01AA                     u1727:
  1238  01AA  0BA0               	decfsz	??_prepheral_testing^(0+128),f
  1239  01AB  29AA               	goto	u1727
  1240  01AC  0BA1               	decfsz	(??_prepheral_testing^(0+128)+1),f
  1241  01AD  29AA               	goto	u1727
  1242  01AE  0BA2               	decfsz	(??_prepheral_testing^(0+128)+2),f
  1243  01AF  29AA               	goto	u1727
  1244  01B0  0000               	nop
  1245  01B1  3001               	movlw	1
  1246  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1247  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1248  01B4  07A3               	addwf	prepheral_testing@i^(0+128),f
  1249  01B5  1803               	skipnc
  1250  01B6  0AA4               	incf	(prepheral_testing@i+1)^(0+128),f
  1251  01B7  3000               	movlw	0
  1252  01B8  07A4               	addwf	(prepheral_testing@i+1)^(0+128),f
  1253  01B9  0824               	movf	(prepheral_testing@i+1)^(0+128),w
  1254  01BA  3A80               	xorlw	128
  1255  01BB  00FF               	movwf	127
  1256  01BC  3080               	movlw	128
  1257  01BD  027F               	subwf	127,w
  1258  01BE  1D03               	skipz
  1259  01BF  29C2               	goto	u1565
  1260  01C0  3007               	movlw	7
  1261  01C1  0223               	subwf	prepheral_testing@i^(0+128),w
  1262  01C2                     u1565:
  1263  01C2  1C03               	skipc
  1264  01C3  2990               	goto	l1786
  1265                           
  1266                           ;main.c: 192: };main.c: 193: PORTDbits.RD7 = 1;
  1267  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1268  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1269  01C6  1788               	bsf	8,7	;volatile
  1270                           
  1271                           ;main.c: 194: PORTDbits.RD6 = 0;
  1272  01C7  1308               	bcf	8,6	;volatile
  1273                           
  1274                           ;main.c: 195: for (int i=0;i<7;i++)
  1275  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1276  01C9  01A5               	clrf	prepheral_testing@i_204^(0+128)
  1277  01CA  01A6               	clrf	(prepheral_testing@i_204+1)^(0+128)
  1278  01CB                     l1802:
  1279                           
  1280                           ;main.c: 196: {;main.c: 197: PORTB = 0;
  1281  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1282  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1283  01CD  0186               	clrf	6	;volatile
  1284                           
  1285                           ;main.c: 198: PORTB |= (1<<i);
  1286  01CE  3001               	movlw	1
  1287  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1288  01D0  00A0               	movwf	??_prepheral_testing^(0+128)
  1289  01D1  0A25               	incf	prepheral_testing@i_204^(0+128),w
  1290  01D2  29D5               	goto	u1574
  1291  01D3                     u1575:
  1292  01D3  1003               	clrc
  1293  01D4  0DA0               	rlf	??_prepheral_testing^(0+128),f
  1294  01D5                     u1574:
  1295  01D5  3EFF               	addlw	-1
  1296  01D6  1D03               	skipz
  1297  01D7  29D3               	goto	u1575
  1298  01D8  0820               	movf	??_prepheral_testing^(0+128),w
  1299  01D9  00A1               	movwf	(??_prepheral_testing+1)^(0+128)
  1300  01DA  0821               	movf	(??_prepheral_testing+1)^(0+128),w
  1301  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1302  01DC  0486               	iorwf	6,f	;volatile
  1303                           
  1304                           ;main.c: 199: _delay((unsigned long)((150)*(8000000/4000.0)));
  1305  01DD  3002               	movlw	2
  1306  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1307  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1308  01E0  00A2               	movwf	(??_prepheral_testing^(0+128)+2)
  1309  01E1  3086               	movlw	134
  1310  01E2  00A1               	movwf	(??_prepheral_testing^(0+128)+1)
  1311  01E3  3098               	movlw	152
  1312  01E4  00A0               	movwf	??_prepheral_testing^(0+128)
  1313  01E5                     u1737:
  1314  01E5  0BA0               	decfsz	??_prepheral_testing^(0+128),f
  1315  01E6  29E5               	goto	u1737
  1316  01E7  0BA1               	decfsz	(??_prepheral_testing^(0+128)+1),f
  1317  01E8  29E5               	goto	u1737
  1318  01E9  0BA2               	decfsz	(??_prepheral_testing^(0+128)+2),f
  1319  01EA  29E5               	goto	u1737
  1320  01EB  0000               	nop
  1321  01EC  3001               	movlw	1
  1322  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1323  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1324  01EF  07A5               	addwf	prepheral_testing@i_204^(0+128),f
  1325  01F0  1803               	skipnc
  1326  01F1  0AA6               	incf	(prepheral_testing@i_204+1)^(0+128),f
  1327  01F2  3000               	movlw	0
  1328  01F3  07A6               	addwf	(prepheral_testing@i_204+1)^(0+128),f
  1329  01F4  0826               	movf	(prepheral_testing@i_204+1)^(0+128),w
  1330  01F5  3A80               	xorlw	128
  1331  01F6  00FF               	movwf	127
  1332  01F7  3080               	movlw	128
  1333  01F8  027F               	subwf	127,w
  1334  01F9  1D03               	skipz
  1335  01FA  29FD               	goto	u1585
  1336  01FB  3007               	movlw	7
  1337  01FC  0225               	subwf	prepheral_testing@i_204^(0+128),w
  1338  01FD                     u1585:
  1339  01FD  1C03               	skipc
  1340  01FE  29CB               	goto	l1802
  1341                           
  1342                           ;main.c: 200: };main.c: 201: PORTDbits.RD6 = 1;
  1343  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0201  1708               	bsf	8,6	;volatile
  1346                           
  1347                           ;main.c: 202: PORTB = 0;
  1348  0202  0186               	clrf	6	;volatile
  1349                           
  1350                           ;main.c: 205: heater_on();
  1351  0203  120A  118A  2585  120A  118A  	fcall	_heater_on
  1352                           
  1353                           ;main.c: 206: _delay((unsigned long)((150)*(8000000/4000.0)));
  1354  0208  3002               	movlw	2
  1355  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1356  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1357  020B  00A2               	movwf	(??_prepheral_testing^(0+128)+2)
  1358  020C  3086               	movlw	134
  1359  020D  00A1               	movwf	(??_prepheral_testing^(0+128)+1)
  1360  020E  3098               	movlw	152
  1361  020F  00A0               	movwf	??_prepheral_testing^(0+128)
  1362  0210                     u1747:
  1363  0210  0BA0               	decfsz	??_prepheral_testing^(0+128),f
  1364  0211  2A10               	goto	u1747
  1365  0212  0BA1               	decfsz	(??_prepheral_testing^(0+128)+1),f
  1366  0213  2A10               	goto	u1747
  1367  0214  0BA2               	decfsz	(??_prepheral_testing^(0+128)+2),f
  1368  0215  2A10               	goto	u1747
  1369  0216  0000               	nop
  1370                           
  1371                           ;main.c: 207: heater_off();
  1372  0217  120A  118A  2580  120A  118A  	fcall	_heater_off
  1373                           
  1374                           ;main.c: 209: cooler_on;
  1375  021C  3002               	movlw	2
  1376  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1377  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1378  021F  00A2               	movwf	(??_prepheral_testing^(0+128)+2)
  1379  0220  3086               	movlw	134
  1380  0221  00A1               	movwf	(??_prepheral_testing^(0+128)+1)
  1381  0222  3098               	movlw	152
  1382  0223  00A0               	movwf	??_prepheral_testing^(0+128)
  1383  0224                     u1757:
  1384  0224  0BA0               	decfsz	??_prepheral_testing^(0+128),f
  1385  0225  2A24               	goto	u1757
  1386  0226  0BA1               	decfsz	(??_prepheral_testing^(0+128)+1),f
  1387  0227  2A24               	goto	u1757
  1388  0228  0BA2               	decfsz	(??_prepheral_testing^(0+128)+2),f
  1389  0229  2A24               	goto	u1757
  1390  022A  0000               	nop
  1391                           
  1392                           ;main.c: 211: cooler_off;
  1393  022B  3002               	movlw	2
  1394  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1395  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1396  022E  00A2               	movwf	(??_prepheral_testing^(0+128)+2)
  1397  022F  3086               	movlw	134
  1398  0230  00A1               	movwf	(??_prepheral_testing^(0+128)+1)
  1399  0231  3098               	movlw	152
  1400  0232  00A0               	movwf	??_prepheral_testing^(0+128)
  1401  0233                     u1767:
  1402  0233  0BA0               	decfsz	??_prepheral_testing^(0+128),f
  1403  0234  2A33               	goto	u1767
  1404  0235  0BA1               	decfsz	(??_prepheral_testing^(0+128)+1),f
  1405  0236  2A33               	goto	u1767
  1406  0237  0BA2               	decfsz	(??_prepheral_testing^(0+128)+2),f
  1407  0238  2A33               	goto	u1767
  1408  0239  0000               	nop
  1409  023A  0008               	return
  1410  023B                     __end_of_prepheral_testing:
  1411                           
  1412                           	psect	text3
  1413  0585                     __ptext3:	
  1414 ;; *************** function _heater_on *****************
  1415 ;; Defined at:
  1416 ;;		line 34 in file "io_prepherals.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		None
  1425 ;; Tracked objects:
  1426 ;;		On entry : 200/100
  1427 ;;		On exit  : 300/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    3
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;;		_prepheral_testing
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _heater_on
  1447  0585                     _heater_on:
  1448                           
  1449                           ;io_prepherals.c: 36: PORTCbits.RC5 = 1;
  1450                           
  1451                           ;incstack = 0
  1452                           ; Regs used in _heater_on: []
  1453  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0586  1687               	bsf	7,5	;volatile
  1455                           
  1456                           ;io_prepherals.c: 37: PORTDbits.RD1 =1;
  1457  0587  1488               	bsf	8,1	;volatile
  1458  0588  0008               	return
  1459  0589                     __end_of_heater_on:
  1460                           
  1461                           	psect	text4
  1462  0591                     __ptext4:	
  1463 ;; *************** function _init_switches *****************
  1464 ;; Defined at:
  1465 ;;		line 12 in file "io_prepherals.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;		None
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		None
  1474 ;; Tracked objects:
  1475 ;;		On entry : B00/100
  1476 ;;		On exit  : B00/100
  1477 ;;		Unchanged: 800/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1479 ;;      Params:         0       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0
  1482 ;;      Totals:         0       0       0       0       0
  1483 ;;Total ram usage:        0 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    3
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function _init_switches
  1495  0591                     _init_switches:
  1496                           
  1497                           ;io_prepherals.c: 15: TRISCbits.TRISC6 = 1;
  1498                           
  1499                           ;incstack = 0
  1500                           ; Regs used in _init_switches: []
  1501  0591  1707               	bsf	7,6	;volatile
  1502                           
  1503                           ;io_prepherals.c: 16: TRISCbits.TRISC7 = 1;
  1504  0592  1787               	bsf	7,7	;volatile
  1505  0593  0008               	return
  1506  0594                     __end_of_init_switches:
  1507                           
  1508                           	psect	text5
  1509  0559                     __ptext5:	
  1510 ;; *************** function _init_lm35 *****************
  1511 ;; Defined at:
  1512 ;;		line 11 in file "lm35.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg
  1521 ;; Tracked objects:
  1522 ;;		On entry : B00/100
  1523 ;;		On exit  : B00/100
  1524 ;;		Unchanged: 800/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _init_lm35
  1542  0559                     _init_lm35:
  1543                           
  1544                           ;lm35.c: 14: ADCON0 = 0x41;
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _init_lm35: [wreg]
  1548  0559  3041               	movlw	65
  1549  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1550  055B  009F               	movwf	31	;volatile
  1551                           
  1552                           ;lm35.c: 15: ADCON1 = 0x80;
  1553  055C  3080               	movlw	128
  1554  055D  1683               	bsf	3,5	;RP0=1, select bank1
  1555  055E  009F               	movwf	31	;volatile
  1556                           
  1557                           ;lm35.c: 17: ADIF = 0;
  1558  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0560  130C               	bcf	12,6	;volatile
  1560                           
  1561                           ;lm35.c: 18: ADIE = 1;
  1562  0561  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0562  170C               	bsf	12,6	;volatile
  1564                           
  1565                           ;lm35.c: 19: PEIE = 1;
  1566  0563  170B               	bsf	11,6	;volatile
  1567                           
  1568                           ;lm35.c: 20: GIE = 1;
  1569  0564  178B               	bsf	11,7	;volatile
  1570  0565  0008               	return
  1571  0566                     __end_of_init_lm35:
  1572                           
  1573                           	psect	text6
  1574  054B                     __ptext6:	
  1575 ;; *************** function _init_cooler_heater *****************
  1576 ;; Defined at:
  1577 ;;		line 18 in file "io_prepherals.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : B00/100
  1588 ;;		On exit  : 300/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    4
  1598 ;; This function calls:
  1599 ;;		_cooler_off
  1600 ;;		_heater_off
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           
  1607                           ;psect for function _init_cooler_heater
  1608  054B                     _init_cooler_heater:
  1609                           
  1610                           ;io_prepherals.c: 21: TRISDbits.TRISD1=0;
  1611                           
  1612                           ;incstack = 0
  1613                           ; Regs used in _init_cooler_heater: [status,2+status,0+pclath+cstack]
  1614  054B  1088               	bcf	8,1	;volatile
  1615                           
  1616                           ;io_prepherals.c: 22: TRISCbits.TRISC4 = 0;
  1617  054C  1207               	bcf	7,4	;volatile
  1618                           
  1619                           ;io_prepherals.c: 23: TRISCbits.TRISC5 = 0;
  1620  054D  1287               	bcf	7,5	;volatile
  1621                           
  1622                           ;io_prepherals.c: 25: PORTDbits.RD1 =0;
  1623  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1624  054F  1088               	bcf	8,1	;volatile
  1625                           
  1626                           ;io_prepherals.c: 26: cooler_off();
  1627  0550  120A  118A  259D  120A  118A  	fcall	_cooler_off
  1628                           
  1629                           ;io_prepherals.c: 27: heater_off();
  1630  0555  120A  118A  2580   	fcall	_heater_off
  1631  0558  0008               	return
  1632  0559                     __end_of_init_cooler_heater:
  1633                           
  1634                           	psect	text7
  1635  0580                     __ptext7:	
  1636 ;; *************** function _heater_off *****************
  1637 ;; Defined at:
  1638 ;;		line 44 in file "io_prepherals.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		None
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/100
  1649 ;;		On exit  : 300/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    3
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;;		_prepheral_testing
  1664 ;;		_init_cooler_heater
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function _heater_off
  1670  0580                     _heater_off:
  1671                           
  1672                           ;io_prepherals.c: 46: PORTCbits.RC5 = 0;
  1673                           
  1674                           ;incstack = 0
  1675                           ; Regs used in _heater_off: []
  1676  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0581  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0582  1287               	bcf	7,5	;volatile
  1679                           
  1680                           ;io_prepherals.c: 47: PORTDbits.RD1 =0;
  1681  0583  1088               	bcf	8,1	;volatile
  1682  0584  0008               	return
  1683  0585                     __end_of_heater_off:
  1684                           
  1685                           	psect	text8
  1686  059D                     __ptext8:	
  1687 ;; *************** function _cooler_off *****************
  1688 ;; Defined at:
  1689 ;;		line 40 in file "io_prepherals.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		None
  1698 ;; Tracked objects:
  1699 ;;		On entry : 300/0
  1700 ;;		On exit  : 300/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;;		_init_cooler_heater
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _cooler_off
  1720  059D                     _cooler_off:
  1721                           
  1722                           ;io_prepherals.c: 42: PORTCbits.RC4 = 0;
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _cooler_off: []
  1726  059D  1207               	bcf	7,4	;volatile
  1727  059E  0008               	return
  1728  059F                     __end_of_cooler_off:
  1729                           
  1730                           	psect	text9
  1731  0571                     __ptext9:	
  1732 ;; *************** function _init_7seg *****************
  1733 ;; Defined at:
  1734 ;;		line 13 in file "seven_segment.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg
  1743 ;; Tracked objects:
  1744 ;;		On entry : B00/0
  1745 ;;		On exit  : B00/100
  1746 ;;		Unchanged: 800/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    3
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _init_7seg
  1764  0571                     _init_7seg:
  1765                           
  1766                           ;seven_segment.c: 17: TRISB = 0x01;
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _init_7seg: [wreg]
  1770  0571  3001               	movlw	1
  1771  0572  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0573  0086               	movwf	6	;volatile
  1773                           
  1774                           ;seven_segment.c: 19: TRISDbits.TRISD6 = 0;
  1775  0574  1308               	bcf	8,6	;volatile
  1776                           
  1777                           ;seven_segment.c: 20: TRISDbits.TRISD7 = 0;
  1778  0575  1388               	bcf	8,7	;volatile
  1779                           
  1780                           ;seven_segment.c: 22: INTEDG = 1;
  1781  0576  1701               	bsf	1,6	;volatile
  1782                           
  1783                           ;seven_segment.c: 23: INTE = 1;
  1784  0577  160B               	bsf	11,4	;volatile
  1785                           
  1786                           ;seven_segment.c: 24: GIE = 1;
  1787  0578  178B               	bsf	11,7	;volatile
  1788  0579  0008               	return
  1789  057A                     __end_of_init_7seg:
  1790                           
  1791                           	psect	text10
  1792  0594                     __ptext10:	
  1793 ;; *************** function _cooler_on *****************
  1794 ;; Defined at:
  1795 ;;		line 30 in file "io_prepherals.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		None
  1804 ;; Tracked objects:
  1805 ;;		On entry : 300/100
  1806 ;;		On exit  : 300/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    3
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _cooler_on
  1825  0594                     _cooler_on:
  1826                           
  1827                           ;io_prepherals.c: 32: PORTCbits.RC4 = 1;
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _cooler_on: []
  1831  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0595  1607               	bsf	7,4	;volatile
  1833  0596  0008               	return
  1834  0597                     __end_of_cooler_on:
  1835                           
  1836                           	psect	text11
  1837  051C                     __ptext11:	
  1838 ;; *************** function _DEL_write_7seg *****************
  1839 ;; Defined at:
  1840 ;;		line 30 in file "seven_segment.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  val             2   19[BANK1 ] unsigned int 
  1843 ;;  time            2   21[BANK1 ] unsigned int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  i               2   23[BANK1 ] int 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 300/100
  1852 ;;		On exit  : 300/100
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       4       0       0
  1856 ;;      Locals:         0       0       2       0       0
  1857 ;;      Temps:          0       0       0       0       0
  1858 ;;      Totals:         0       0       6       0       0
  1859 ;;Total ram usage:        6 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    5
  1862 ;; This function calls:
  1863 ;;		_write_7seg
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _DEL_write_7seg
  1871  051C                     _DEL_write_7seg:
  1872                           
  1873                           ;seven_segment.c: 32: for(int i=0;i<time;i++ )
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _DEL_write_7seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1877  051C  01B7               	clrf	DEL_write_7seg@i^(0+128)
  1878  051D  01B8               	clrf	(DEL_write_7seg@i+1)^(0+128)
  1879  051E                     l1836:
  1880  051E  0836               	movf	(DEL_write_7seg@time+1)^(0+128),w
  1881  051F  0238               	subwf	(DEL_write_7seg@i+1)^(0+128),w
  1882  0520  1D03               	skipz
  1883  0521  2D24               	goto	u1605
  1884  0522  0835               	movf	DEL_write_7seg@time^(0+128),w
  1885  0523  0237               	subwf	DEL_write_7seg@i^(0+128),w
  1886  0524                     u1605:
  1887  0524  1803               	btfsc	3,0
  1888  0525  0008               	return
  1889                           
  1890                           ;seven_segment.c: 33: {;seven_segment.c: 34: write_7seg(val);
  1891  0526  0834               	movf	(DEL_write_7seg@val+1)^(0+128),w
  1892  0527  00AE               	movwf	(write_7seg@x+1)^(0+128)
  1893  0528  0833               	movf	DEL_write_7seg@val^(0+128),w
  1894  0529  00AD               	movwf	write_7seg@x^(0+128)
  1895  052A  120A  118A  23C9  120A  118A  	fcall	_write_7seg
  1896  052F  3001               	movlw	1
  1897  0530  1683               	bsf	3,5	;RP0=1, select bank1
  1898  0531  1303               	bcf	3,6	;RP1=0, select bank1
  1899  0532  07B7               	addwf	DEL_write_7seg@i^(0+128),f
  1900  0533  1803               	skipnc
  1901  0534  0AB8               	incf	(DEL_write_7seg@i+1)^(0+128),f
  1902  0535  3000               	movlw	0
  1903  0536  07B8               	addwf	(DEL_write_7seg@i+1)^(0+128),f
  1904  0537  2D1E               	goto	l1836
  1905  0538                     __end_of_DEL_write_7seg:
  1906                           
  1907                           	psect	text12
  1908  03C9                     __ptext12:	
  1909 ;; *************** function _write_7seg *****************
  1910 ;; Defined at:
  1911 ;;		line 37 in file "seven_segment.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  x               2   13[BANK1 ] unsigned int 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  d2              1   18[BANK1 ] unsigned char 
  1916 ;;  d1              1   17[BANK1 ] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 300/100
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       0       2       0       0
  1927 ;;      Locals:         0       0       2       0       0
  1928 ;;      Temps:          0       0       2       0       0
  1929 ;;      Totals:         0       0       6       0       0
  1930 ;;Total ram usage:        6 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    4
  1933 ;; This function calls:
  1934 ;;		___lwdiv
  1935 ;;		___lwmod
  1936 ;;		_evaluate
  1937 ;;		_selec_7seg
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;;		_DEL_write_7seg
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function _write_7seg
  1946  03C9                     _write_7seg:
  1947                           
  1948                           ;seven_segment.c: 39: uint8_t d1 = x % 10;
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in _write_7seg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1952  03C9  300A               	movlw	10
  1953  03CA  00A0               	movwf	___lwmod@divisor^(0+128)
  1954  03CB  3000               	movlw	0
  1955  03CC  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1956  03CD  082E               	movf	(write_7seg@x+1)^(0+128),w
  1957  03CE  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1958  03CF  082D               	movf	write_7seg@x^(0+128),w
  1959  03D0  00A2               	movwf	___lwmod@dividend^(0+128)
  1960  03D1  120A  118A  24A5  120A  118A  	fcall	___lwmod
  1961  03D6  0820               	movf	?___lwmod^(0+128),w
  1962  03D7  00AF               	movwf	??_write_7seg^(0+128)
  1963  03D8  082F               	movf	??_write_7seg^(0+128),w
  1964  03D9  00B1               	movwf	write_7seg@d1^(0+128)
  1965                           
  1966                           ;seven_segment.c: 40: uint8_t d2 = (x %100)/10;
  1967  03DA  300A               	movlw	10
  1968  03DB  00A5               	movwf	___lwdiv@divisor^(0+128)
  1969  03DC  3000               	movlw	0
  1970  03DD  00A6               	movwf	(___lwdiv@divisor^(0+128)+1)
  1971  03DE  082E               	movf	(write_7seg@x+1)^(0+128),w
  1972  03DF  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1973  03E0  082D               	movf	write_7seg@x^(0+128),w
  1974  03E1  00A2               	movwf	___lwmod@dividend^(0+128)
  1975  03E2  3064               	movlw	100
  1976  03E3  00A0               	movwf	___lwmod@divisor^(0+128)
  1977  03E4  3000               	movlw	0
  1978  03E5  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1979  03E6  120A  118A  24A5  120A  118A  	fcall	___lwmod
  1980  03EB  0821               	movf	(?___lwmod+1)^(0+128),w
  1981  03EC  00A8               	movwf	(___lwdiv@dividend+1)^(0+128)
  1982  03ED  0820               	movf	?___lwmod^(0+128),w
  1983  03EE  00A7               	movwf	___lwdiv@dividend^(0+128)
  1984  03EF  120A  118A  2469  120A  118A  	fcall	___lwdiv
  1985  03F4  0825               	movf	?___lwdiv^(0+128),w
  1986  03F5  00AF               	movwf	??_write_7seg^(0+128)
  1987  03F6  082F               	movf	??_write_7seg^(0+128),w
  1988  03F7  00B2               	movwf	write_7seg@d2^(0+128)
  1989                           
  1990                           ;seven_segment.c: 43: selec_7seg(0);
  1991  03F8  3000               	movlw	0
  1992  03F9  120A  118A  2538  120A  118A  	fcall	_selec_7seg
  1993                           
  1994                           ;seven_segment.c: 45: evaluate(d1);
  1995  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  1996  03FF  0831               	movf	write_7seg@d1^(0+128),w
  1997  0400  120A  118A  2427  120A  118A  	fcall	_evaluate
  1998                           
  1999                           ;seven_segment.c: 46: _delay((unsigned long)((5)*(8000000/4000.0)));
  2000  0405  300D               	movlw	13
  2001  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0408  00B0               	movwf	(??_write_7seg^(0+128)+1)
  2004  0409  30FB               	movlw	251
  2005  040A  00AF               	movwf	??_write_7seg^(0+128)
  2006  040B                     u1777:
  2007  040B  0BAF               	decfsz	??_write_7seg^(0+128),f
  2008  040C  2C0B               	goto	u1777
  2009  040D  0BB0               	decfsz	(??_write_7seg^(0+128)+1),f
  2010  040E  2C0B               	goto	u1777
  2011                           
  2012                           ;seven_segment.c: 48: selec_7seg(1);
  2013  040F  3001               	movlw	1
  2014  0410  120A  118A  2538  120A  118A  	fcall	_selec_7seg
  2015                           
  2016                           ;seven_segment.c: 50: evaluate(d2);
  2017  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0416  0832               	movf	write_7seg@d2^(0+128),w
  2019  0417  120A  118A  2427  120A  118A  	fcall	_evaluate
  2020                           
  2021                           ;seven_segment.c: 51: _delay((unsigned long)((5)*(8000000/4000.0)));
  2022  041C  300D               	movlw	13
  2023  041D  1683               	bsf	3,5	;RP0=1, select bank1
  2024  041E  1303               	bcf	3,6	;RP1=0, select bank1
  2025  041F  00B0               	movwf	(??_write_7seg^(0+128)+1)
  2026  0420  30FB               	movlw	251
  2027  0421  00AF               	movwf	??_write_7seg^(0+128)
  2028  0422                     u1787:
  2029  0422  0BAF               	decfsz	??_write_7seg^(0+128),f
  2030  0423  2C22               	goto	u1787
  2031  0424  0BB0               	decfsz	(??_write_7seg^(0+128)+1),f
  2032  0425  2C22               	goto	u1787
  2033  0426  0008               	return
  2034  0427                     __end_of_write_7seg:
  2035                           
  2036                           	psect	text13
  2037  0538                     __ptext13:	
  2038 ;; *************** function _selec_7seg *****************
  2039 ;; Defined at:
  2040 ;;		line 59 in file "seven_segment.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  sel             1    wreg     unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  sel             1   37[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/100
  2051 ;;		On exit  : 300/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       0       0       0       0
  2055 ;;      Locals:         0       1       0       0       0
  2056 ;;      Temps:          0       0       0       0       0
  2057 ;;      Totals:         0       1       0       0       0
  2058 ;;Total ram usage:        1 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    3
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_write_7seg
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _selec_7seg
  2070  0538                     _selec_7seg:
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _selec_7seg: [wreg-fsr0h+status,2+status,0]
  2074                           ;selec_7seg@sel stored from wreg
  2075  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2077  053A  00C5               	movwf	selec_7seg@sel
  2078                           
  2079                           ;seven_segment.c: 61: switch(sel)
  2080  053B  2D42               	goto	l1276
  2081  053C                     l128:	
  2082                           ;seven_segment.c: 62: {;seven_segment.c: 63: case 0 : PORTDbits.RD7 = 0; PORTDbits.RD6 =
      +                           1; break;
  2083                           
  2084  053C  1388               	bcf	8,7	;volatile
  2085  053D  1708               	bsf	8,6	;volatile
  2086  053E  0008               	return
  2087  053F                     l130:	
  2088                           ;seven_segment.c: 64: case 1 : PORTDbits.RD7 = 1; PORTDbits.RD6 = 0; break;
  2089                           
  2090  053F  1788               	bsf	8,7	;volatile
  2091  0540  1308               	bcf	8,6	;volatile
  2092  0541  0008               	return
  2093  0542                     l1276:
  2094  0542  0845               	movf	selec_7seg@sel,w
  2095                           
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 2, Range of values is 0 to 1
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte            7     4 (average)
  2101                           ; direct_byte           14     8 (fixed)
  2102                           ; jumptable            260     6 (fixed)
  2103                           ;	Chosen strategy is simple_byte
  2104  0543  3A00               	xorlw	0	; case 0
  2105  0544  1903               	skipnz
  2106  0545  2D3C               	goto	l128
  2107  0546  3A01               	xorlw	1	; case 1
  2108  0547  1903               	skipnz
  2109  0548  2D3F               	goto	l130
  2110  0549  2D4A               	goto	l132
  2111  054A                     l132:
  2112  054A  0008               	return
  2113  054B                     __end_of_selec_7seg:
  2114                           
  2115                           	psect	text14
  2116  0427                     __ptext14:	
  2117 ;; *************** function _evaluate *****************
  2118 ;; Defined at:
  2119 ;;		line 73 in file "seven_segment.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  x               1    wreg     unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  x               1   37[BANK0 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 300/100
  2130 ;;		On exit  : 300/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       1       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         0       1       0       0       0
  2137 ;;Total ram usage:        1 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_write_7seg
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _evaluate
  2149  0427                     _evaluate:
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _evaluate: [wreg-fsr0h+status,2+status,0]
  2153                           ;evaluate@x stored from wreg
  2154  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0428  00C5               	movwf	evaluate@x
  2156                           
  2157                           ;seven_segment.c: 75: switch(x)
  2158  0429  2C48               	goto	l1306
  2159  042A                     l1280:
  2160  042A  30FC               	movlw	252
  2161  042B  0086               	movwf	6	;volatile
  2162  042C  0008               	return
  2163  042D                     l1282:
  2164  042D  3060               	movlw	96
  2165  042E  0086               	movwf	6	;volatile
  2166  042F  0008               	return
  2167  0430                     l1284:
  2168  0430  30DA               	movlw	218
  2169  0431  0086               	movwf	6	;volatile
  2170  0432  0008               	return
  2171  0433                     l1286:
  2172  0433  30F2               	movlw	242
  2173  0434  0086               	movwf	6	;volatile
  2174  0435  0008               	return
  2175  0436                     l1288:
  2176  0436  3066               	movlw	102
  2177  0437  0086               	movwf	6	;volatile
  2178  0438  0008               	return
  2179  0439                     l1290:
  2180  0439  30B6               	movlw	182
  2181  043A  0086               	movwf	6	;volatile
  2182  043B  0008               	return
  2183  043C                     l1292:
  2184  043C  30BE               	movlw	190
  2185  043D  0086               	movwf	6	;volatile
  2186  043E  0008               	return
  2187  043F                     l1294:
  2188  043F  30E0               	movlw	224
  2189  0440  0086               	movwf	6	;volatile
  2190  0441  0008               	return
  2191  0442                     l1296:
  2192  0442  30FE               	movlw	254
  2193  0443  0086               	movwf	6	;volatile
  2194  0444  0008               	return
  2195  0445                     l1298:
  2196  0445  30F6               	movlw	246
  2197  0446  0086               	movwf	6	;volatile
  2198  0447  0008               	return
  2199  0448                     l1306:
  2200  0448  0845               	movf	evaluate@x,w
  2201                           
  2202                           ; Switch size 1, requested type "simple"
  2203                           ; Number of cases is 10, Range of values is 0 to 9
  2204                           ; switch strategies available:
  2205                           ; Name         Instructions Cycles
  2206                           ; simple_byte           31    16 (average)
  2207                           ; direct_byte           38     8 (fixed)
  2208                           ; jumptable            260     6 (fixed)
  2209                           ;	Chosen strategy is simple_byte
  2210  0449  3A00               	xorlw	0	; case 0
  2211  044A  1903               	skipnz
  2212  044B  2C2A               	goto	l1280
  2213  044C  3A01               	xorlw	1	; case 1
  2214  044D  1903               	skipnz
  2215  044E  2C2D               	goto	l1282
  2216  044F  3A03               	xorlw	3	; case 2
  2217  0450  1903               	skipnz
  2218  0451  2C30               	goto	l1284
  2219  0452  3A01               	xorlw	1	; case 3
  2220  0453  1903               	skipnz
  2221  0454  2C33               	goto	l1286
  2222  0455  3A07               	xorlw	7	; case 4
  2223  0456  1903               	skipnz
  2224  0457  2C36               	goto	l1288
  2225  0458  3A01               	xorlw	1	; case 5
  2226  0459  1903               	skipnz
  2227  045A  2C39               	goto	l1290
  2228  045B  3A03               	xorlw	3	; case 6
  2229  045C  1903               	skipnz
  2230  045D  2C3C               	goto	l1292
  2231  045E  3A01               	xorlw	1	; case 7
  2232  045F  1903               	skipnz
  2233  0460  2C3F               	goto	l1294
  2234  0461  3A0F               	xorlw	15	; case 8
  2235  0462  1903               	skipnz
  2236  0463  2C42               	goto	l1296
  2237  0464  3A01               	xorlw	1	; case 9
  2238  0465  1903               	skipnz
  2239  0466  2C45               	goto	l1298
  2240  0467  2C2A               	goto	l1280
  2241  0468  0008               	return
  2242  0469                     __end_of_evaluate:
  2243                           
  2244                           	psect	text15
  2245  04A5                     __ptext15:	
  2246 ;; *************** function ___lwmod *****************
  2247 ;; Defined at:
  2248 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  divisor         2    0[BANK1 ] unsigned int 
  2251 ;;  dividend        2    2[BANK1 ] unsigned int 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  counter         1    4[BANK1 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  2    0[BANK1 ] unsigned int 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 300/100
  2260 ;;		On exit  : 300/100
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       4       0       0
  2264 ;;      Locals:         0       0       1       0       0
  2265 ;;      Temps:          0       1       0       0       0
  2266 ;;      Totals:         0       1       5       0       0
  2267 ;;Total ram usage:        6 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_write_7seg
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function ___lwmod
  2279  04A5                     ___lwmod:
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2283  04A5  0820               	movf	___lwmod@divisor^(0+128),w
  2284  04A6  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  2285  04A7  1903               	btfsc	3,2
  2286  04A8  2CD4               	goto	l1760
  2287  04A9  01A4               	clrf	___lwmod@counter^(0+128)
  2288  04AA  0AA4               	incf	___lwmod@counter^(0+128),f
  2289  04AB                     l1750:
  2290  04AB  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2291  04AC  2CBB               	goto	l1752
  2292  04AD  3001               	movlw	1
  2293  04AE                     u1505:
  2294  04AE  1003               	clrc
  2295  04AF  0DA0               	rlf	___lwmod@divisor^(0+128),f
  2296  04B0  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  2297  04B1  3EFF               	addlw	-1
  2298  04B2  1D03               	skipz
  2299  04B3  2CAE               	goto	u1505
  2300  04B4  3001               	movlw	1
  2301  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2302  04B6  00C5               	movwf	??___lwmod
  2303  04B7  0845               	movf	??___lwmod,w
  2304  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2305  04B9  07A4               	addwf	___lwmod@counter^(0+128),f
  2306  04BA  2CAB               	goto	l1750
  2307  04BB                     l1752:
  2308  04BB  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2309  04BC  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  2310  04BD  1D03               	skipz
  2311  04BE  2CC1               	goto	u1525
  2312  04BF  0820               	movf	___lwmod@divisor^(0+128),w
  2313  04C0  0222               	subwf	___lwmod@dividend^(0+128),w
  2314  04C1                     u1525:
  2315  04C1  1C03               	skipc
  2316  04C2  2CC9               	goto	l1756
  2317  04C3  0820               	movf	___lwmod@divisor^(0+128),w
  2318  04C4  02A2               	subwf	___lwmod@dividend^(0+128),f
  2319  04C5  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2320  04C6  1C03               	skipc
  2321  04C7  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  2322  04C8  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  2323  04C9                     l1756:
  2324  04C9  3001               	movlw	1
  2325  04CA                     u1535:
  2326  04CA  1003               	clrc
  2327  04CB  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  2328  04CC  0CA0               	rrf	___lwmod@divisor^(0+128),f
  2329  04CD  3EFF               	addlw	-1
  2330  04CE  1D03               	skipz
  2331  04CF  2CCA               	goto	u1535
  2332  04D0  3001               	movlw	1
  2333  04D1  02A4               	subwf	___lwmod@counter^(0+128),f
  2334  04D2  1D03               	btfss	3,2
  2335  04D3  2CBB               	goto	l1752
  2336  04D4                     l1760:
  2337  04D4  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2338  04D5  00A1               	movwf	(?___lwmod+1)^(0+128)
  2339  04D6  0822               	movf	___lwmod@dividend^(0+128),w
  2340  04D7  00A0               	movwf	?___lwmod^(0+128)
  2341  04D8  0008               	return
  2342  04D9                     __end_of___lwmod:
  2343                           
  2344                           	psect	text16
  2345  0469                     __ptext16:	
  2346 ;; *************** function ___lwdiv *****************
  2347 ;; Defined at:
  2348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  divisor         2    5[BANK1 ] unsigned int 
  2351 ;;  dividend        2    7[BANK1 ] unsigned int 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  quotient        2   10[BANK1 ] unsigned int 
  2354 ;;  counter         1   12[BANK1 ] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  2    5[BANK1 ] unsigned int 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 300/100
  2361 ;;		On exit  : 300/100
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         0       0       4       0       0
  2365 ;;      Locals:         0       0       3       0       0
  2366 ;;      Temps:          0       0       1       0       0
  2367 ;;      Totals:         0       0       8       0       0
  2368 ;;Total ram usage:        8 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    3
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_write_7seg
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function ___lwdiv
  2380  0469                     ___lwdiv:
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2384  0469  01AA               	clrf	___lwdiv@quotient^(0+128)
  2385  046A  01AB               	clrf	(___lwdiv@quotient+1)^(0+128)
  2386  046B  0825               	movf	___lwdiv@divisor^(0+128),w
  2387  046C  0426               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  2388  046D  1903               	btfsc	3,2
  2389  046E  2CA0               	goto	l1330
  2390  046F  01AC               	clrf	___lwdiv@counter^(0+128)
  2391  0470  0AAC               	incf	___lwdiv@counter^(0+128),f
  2392  0471                     l1318:
  2393  0471  1BA6               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2394  0472  2C7F               	goto	l1320
  2395  0473  3001               	movlw	1
  2396  0474                     u765:
  2397  0474  1003               	clrc
  2398  0475  0DA5               	rlf	___lwdiv@divisor^(0+128),f
  2399  0476  0DA6               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2400  0477  3EFF               	addlw	-1
  2401  0478  1D03               	skipz
  2402  0479  2C74               	goto	u765
  2403  047A  3001               	movlw	1
  2404  047B  00A9               	movwf	??___lwdiv^(0+128)
  2405  047C  0829               	movf	??___lwdiv^(0+128),w
  2406  047D  07AC               	addwf	___lwdiv@counter^(0+128),f
  2407  047E  2C71               	goto	l1318
  2408  047F                     l1320:
  2409  047F  3001               	movlw	1
  2410  0480                     u785:
  2411  0480  1003               	clrc
  2412  0481  0DAA               	rlf	___lwdiv@quotient^(0+128),f
  2413  0482  0DAB               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2414  0483  3EFF               	addlw	-1
  2415  0484  1D03               	skipz
  2416  0485  2C80               	goto	u785
  2417  0486  0826               	movf	(___lwdiv@divisor+1)^(0+128),w
  2418  0487  0228               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2419  0488  1D03               	skipz
  2420  0489  2C8C               	goto	u795
  2421  048A  0825               	movf	___lwdiv@divisor^(0+128),w
  2422  048B  0227               	subwf	___lwdiv@dividend^(0+128),w
  2423  048C                     u795:
  2424  048C  1C03               	skipc
  2425  048D  2C95               	goto	l1326
  2426  048E  0825               	movf	___lwdiv@divisor^(0+128),w
  2427  048F  02A7               	subwf	___lwdiv@dividend^(0+128),f
  2428  0490  0826               	movf	(___lwdiv@divisor+1)^(0+128),w
  2429  0491  1C03               	skipc
  2430  0492  03A8               	decf	(___lwdiv@dividend+1)^(0+128),f
  2431  0493  02A8               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2432  0494  142A               	bsf	___lwdiv@quotient^(0+128),0
  2433  0495                     l1326:
  2434  0495  3001               	movlw	1
  2435  0496                     u805:
  2436  0496  1003               	clrc
  2437  0497  0CA6               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2438  0498  0CA5               	rrf	___lwdiv@divisor^(0+128),f
  2439  0499  3EFF               	addlw	-1
  2440  049A  1D03               	skipz
  2441  049B  2C96               	goto	u805
  2442  049C  3001               	movlw	1
  2443  049D  02AC               	subwf	___lwdiv@counter^(0+128),f
  2444  049E  1D03               	btfss	3,2
  2445  049F  2C7F               	goto	l1320
  2446  04A0                     l1330:
  2447  04A0  082B               	movf	(___lwdiv@quotient+1)^(0+128),w
  2448  04A1  00A6               	movwf	(?___lwdiv+1)^(0+128)
  2449  04A2  082A               	movf	___lwdiv@quotient^(0+128),w
  2450  04A3  00A5               	movwf	?___lwdiv^(0+128)
  2451  04A4  0008               	return
  2452  04A5                     __end_of___lwdiv:
  2453                           
  2454                           	psect	text17
  2455  023B                     __ptext17:	
  2456 ;; *************** function _ISR *****************
  2457 ;; Defined at:
  2458 ;;		line 109 in file "main.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  tmp             2   35[BANK0 ] int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, pclath, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 300/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       0       0       0       0
  2473 ;;      Locals:         0       2       0       0       0
  2474 ;;      Temps:          0       5       0       0       0
  2475 ;;      Totals:         0       7       0       0       0
  2476 ;;Total ram usage:        7 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    2
  2479 ;; This function calls:
  2480 ;;		___awtoft
  2481 ;;		___ftmul
  2482 ;;		___fttol
  2483 ;;		_read_lm35
  2484 ;;		_reset_lm35
  2485 ;;		_sw_check
  2486 ;;		i1_cooler_off
  2487 ;;		i1_cooler_on
  2488 ;;		i1_heater_off
  2489 ;;		i1_heater_on
  2490 ;; This function is called by:
  2491 ;;		Interrupt level 1
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _ISR
  2497  023B                     _ISR:
  2498                           
  2499                           ;main.c: 118: if ( PIR1bits.ADIF )
  2500  023B  1F0C               	btfss	12,6	;volatile
  2501  023C  2A76               	goto	i1l1708
  2502                           
  2503                           ;main.c: 119: {;main.c: 121: int tmp = read_lm35();
  2504  023D  120A  118A  257A  120A  118A  	fcall	_read_lm35
  2505  0242  0871               	movf	?_read_lm35+1,w
  2506  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0244  00C4               	movwf	ISR@tmp+1
  2508  0245  0870               	movf	?_read_lm35,w
  2509  0246  00C3               	movwf	ISR@tmp
  2510                           
  2511                           ;main.c: 122: current_temprature = tmp * 0.01;
  2512  0247  0844               	movf	ISR@tmp+1,w
  2513  0248  00F9               	movwf	___awtoft@c+1
  2514  0249  0843               	movf	ISR@tmp,w
  2515  024A  00F8               	movwf	___awtoft@c
  2516  024B  120A  118A  24FB  120A  118A  	fcall	___awtoft
  2517  0250  0878               	movf	?___awtoft,w
  2518  0251  00A3               	movwf	___ftmul@f2
  2519  0252  0879               	movf	?___awtoft+1,w
  2520  0253  00A4               	movwf	___ftmul@f2+1
  2521  0254  087A               	movf	?___awtoft+2,w
  2522  0255  00A5               	movwf	___ftmul@f2+2
  2523  0256  30D7               	movlw	215
  2524  0257  00A0               	movwf	___ftmul@f1
  2525  0258  3023               	movlw	35
  2526  0259  00A1               	movwf	___ftmul@f1+1
  2527  025A  303C               	movlw	60
  2528  025B  00A2               	movwf	___ftmul@f1+2
  2529  025C  120A  118A  20D9  120A  118A  	fcall	___ftmul
  2530  0261  0820               	movf	?___ftmul,w
  2531  0262  00B0               	movwf	___fttol@f1
  2532  0263  0821               	movf	?___ftmul+1,w
  2533  0264  00B1               	movwf	___fttol@f1+1
  2534  0265  0822               	movf	?___ftmul+2,w
  2535  0266  00B2               	movwf	___fttol@f1+2
  2536  0267  120A  118A  22E2  120A  118A  	fcall	___fttol
  2537  026C  0830               	movf	?___fttol,w
  2538  026D  00BE               	movwf	??_ISR
  2539  026E  083E               	movf	??_ISR,w
  2540  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2541  0270  00BF               	movwf	_current_temprature^(0+128)
  2542                           
  2543                           ;main.c: 123: reset_lm35();
  2544  0271  120A  118A  259A  120A  118A  	fcall	_reset_lm35
  2545  0276                     i1l1708:
  2546                           
  2547                           ;main.c: 125: };main.c: 129: if(INTF)
  2548  0276  1C8B               	btfss	11,1	;volatile
  2549  0277  2ADA               	goto	i1l81
  2550                           
  2551                           ;main.c: 130: {;main.c: 134: if(sw_check()== UP_SWITCH_PRESSED)
  2552  0278  120A  118A  2566  120A  118A  	fcall	_sw_check
  2553  027D  3A00               	xorlw	0
  2554  027E  1D03               	skipz
  2555  027F  2A95               	goto	i1l1716
  2556                           
  2557                           ;main.c: 135: {;main.c: 136: _delay((unsigned long)((250)*(8000000/4000.0)));
  2558  0280  3003               	movlw	3
  2559  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0283  00C0               	movwf	??_ISR+2
  2562  0284  308A               	movlw	138
  2563  0285  00BF               	movwf	??_ISR+1
  2564  0286  3055               	movlw	85
  2565  0287  00BE               	movwf	??_ISR
  2566  0288                     u179_27:
  2567  0288  0BBE               	decfsz	??_ISR,f
  2568  0289  2A88               	goto	u179_27
  2569  028A  0BBF               	decfsz	??_ISR+1,f
  2570  028B  2A88               	goto	u179_27
  2571  028C  0BC0               	decfsz	??_ISR+2,f
  2572  028D  2A88               	goto	u179_27
  2573                           
  2574                           ;main.c: 137: desired_temprature++;
  2575  028E  3001               	movlw	1
  2576  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0291  00BE               	movwf	??_ISR
  2579  0292  083E               	movf	??_ISR,w
  2580  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0294  07C0               	addwf	_desired_temprature^(0+128),f
  2582  0295                     i1l1716:
  2583                           
  2584                           ;main.c: 141: };main.c: 143: if(sw_check()== DOWN_SWITCH_PRESSED)
  2585  0295  120A  118A  2566  120A  118A  	fcall	_sw_check
  2586  029A  3A02               	xorlw	2
  2587  029B  1D03               	skipz
  2588  029C  2AAF               	goto	i1l1722
  2589                           
  2590                           ;main.c: 144: {;main.c: 146: _delay((unsigned long)((250)*(8000000/4000.0)));
  2591  029D  3003               	movlw	3
  2592  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2593  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2594  02A0  00C0               	movwf	??_ISR+2
  2595  02A1  308A               	movlw	138
  2596  02A2  00BF               	movwf	??_ISR+1
  2597  02A3  3055               	movlw	85
  2598  02A4  00BE               	movwf	??_ISR
  2599  02A5                     u180_27:
  2600  02A5  0BBE               	decfsz	??_ISR,f
  2601  02A6  2AA5               	goto	u180_27
  2602  02A7  0BBF               	decfsz	??_ISR+1,f
  2603  02A8  2AA5               	goto	u180_27
  2604  02A9  0BC0               	decfsz	??_ISR+2,f
  2605  02AA  2AA5               	goto	u180_27
  2606                           
  2607                           ;main.c: 147: desired_temprature--;
  2608  02AB  3001               	movlw	1
  2609  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2610  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2611  02AE  02C0               	subwf	_desired_temprature^(0+128),f
  2612  02AF                     i1l1722:
  2613                           
  2614                           ;main.c: 149: };main.c: 150: if(desired_temprature == current_temprature)
  2615  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2616  02B0  0840               	movf	_desired_temprature^(0+128),w
  2617  02B1  063F               	xorwf	_current_temprature^(0+128),w
  2618  02B2  1D03               	skipz
  2619  02B3  2ABE               	goto	i1l1726
  2620                           
  2621                           ;main.c: 151: {;main.c: 152: heater_off();
  2622  02B4  120A  118A  258D  120A  118A  	fcall	i1_heater_off
  2623                           
  2624                           ;main.c: 153: cooler_off();
  2625  02B9  120A  118A  259F  120A  118A  	fcall	i1_cooler_off
  2626  02BE                     i1l1726:
  2627                           
  2628                           ;main.c: 154: };main.c: 157: if(PORTCbits.RC4==1&&PORTCbits.RC5==1)
  2629  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2630  02BF  1A07               	btfsc	7,4	;volatile
  2631  02C0  1E87               	btfss	7,5	;volatile
  2632  02C1  2AD6               	goto	i1l1738
  2633                           
  2634                           ;main.c: 158: {;main.c: 159: if(desired_temprature > current_temprature)
  2635  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2636  02C3  0840               	movf	_desired_temprature^(0+128),w
  2637  02C4  023F               	subwf	_current_temprature^(0+128),w
  2638  02C5  1803               	skipnc
  2639  02C6  2ACC               	goto	i1l1734
  2640                           
  2641                           ;main.c: 160: {;main.c: 161: heater_on();
  2642  02C7  120A  118A  2589  120A  118A  	fcall	i1_heater_on
  2643  02CC                     i1l1734:
  2644                           
  2645                           ;main.c: 162: };main.c: 163: if(desired_temprature < current_temprature)
  2646  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2647  02CD  083F               	movf	_current_temprature^(0+128),w
  2648  02CE  0240               	subwf	_desired_temprature^(0+128),w
  2649  02CF  1803               	skipnc
  2650  02D0  2AD6               	goto	i1l1738
  2651                           
  2652                           ;main.c: 164: {;main.c: 165: cooler_on();
  2653  02D1  120A  118A  2597  120A  118A  	fcall	i1_cooler_on
  2654  02D6                     i1l1738:
  2655                           
  2656                           ;main.c: 166: };main.c: 169: };main.c: 172: display_desirered_value = 1;
  2657  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2658  02D7  01BE               	clrf	_display_desirered_value^(0+128)
  2659  02D8  0ABE               	incf	_display_desirered_value^(0+128),f
  2660                           
  2661                           ;main.c: 173: INTF=0;
  2662  02D9  108B               	bcf	11,1	;volatile
  2663  02DA                     i1l81:
  2664  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2665  02DB  0842               	movf	??_ISR+4,w
  2666  02DC  008A               	movwf	10
  2667  02DD  0E41               	swapf	??_ISR+3,w
  2668  02DE  0083               	movwf	3
  2669  02DF  0EFE               	swapf	126,f
  2670  02E0  0E7E               	swapf	126,w
  2671  02E1  0009               	retfie
  2672  02E2                     __end_of_ISR:
  2673                           
  2674                           	psect	intentry
  2675  0004                     __pintentry:	
  2676                           ;incstack = 0
  2677                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2678                           
  2679  0004                     interrupt_function:
  2680  007E                     saved_w	set	btemp
  2681  0004  00FE               	movwf	btemp
  2682  0005  0E03               	swapf	3,w
  2683  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2684  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0008  00C1               	movwf	??_ISR+3
  2686  0009  080A               	movf	10,w
  2687  000A  00C2               	movwf	??_ISR+4
  2688  000B  120A  118A  2A3B   	ljmp	_ISR
  2689                           
  2690                           	psect	text18
  2691  0589                     __ptext18:	
  2692 ;; *************** function i1_heater_on *****************
  2693 ;; Defined at:
  2694 ;;		line 34 in file "io_prepherals.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;		None
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  1    wreg      void 
  2701 ;; Registers used:
  2702 ;;		None
  2703 ;; Tracked objects:
  2704 ;;		On entry : 300/100
  2705 ;;		On exit  : 300/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0       0       0       0       0
  2709 ;;      Locals:         0       0       0       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0       0       0       0       0
  2712 ;;Total ram usage:        0 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_ISR
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function i1_heater_on
  2723  0589                     i1_heater_on:
  2724                           
  2725                           ;io_prepherals.c: 36: PORTCbits.RC5 = 1;
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in i1_heater_on: []
  2729  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2730  058A  1687               	bsf	7,5	;volatile
  2731                           
  2732                           ;io_prepherals.c: 37: PORTDbits.RD1 =1;
  2733  058B  1488               	bsf	8,1	;volatile
  2734  058C  0008               	return
  2735  058D                     __end_ofi1_heater_on:
  2736                           
  2737                           	psect	text19
  2738  058D                     __ptext19:	
  2739 ;; *************** function i1_heater_off *****************
  2740 ;; Defined at:
  2741 ;;		line 44 in file "io_prepherals.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		None
  2750 ;; Tracked objects:
  2751 ;;		On entry : 300/100
  2752 ;;		On exit  : 300/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2755 ;;      Params:         0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_ISR
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function i1_heater_off
  2770  058D                     i1_heater_off:
  2771                           
  2772                           ;io_prepherals.c: 46: PORTCbits.RC5 = 0;
  2773                           
  2774                           ;incstack = 0
  2775                           ; Regs used in i1_heater_off: []
  2776  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2777  058E  1287               	bcf	7,5	;volatile
  2778                           
  2779                           ;io_prepherals.c: 47: PORTDbits.RD1 =0;
  2780  058F  1088               	bcf	8,1	;volatile
  2781  0590  0008               	return
  2782  0591                     __end_ofi1_heater_off:
  2783                           
  2784                           	psect	text20
  2785  0597                     __ptext20:	
  2786 ;; *************** function i1_cooler_on *****************
  2787 ;; Defined at:
  2788 ;;		line 30 in file "io_prepherals.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		None
  2797 ;; Tracked objects:
  2798 ;;		On entry : 300/100
  2799 ;;		On exit  : 300/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_ISR
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function i1_cooler_on
  2817  0597                     i1_cooler_on:
  2818                           
  2819                           ;io_prepherals.c: 32: PORTCbits.RC4 = 1;
  2820                           
  2821                           ;incstack = 0
  2822                           ; Regs used in i1_cooler_on: []
  2823  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0598  1607               	bsf	7,4	;volatile
  2825  0599  0008               	return
  2826  059A                     __end_ofi1_cooler_on:
  2827                           
  2828                           	psect	text21
  2829  059F                     __ptext21:	
  2830 ;; *************** function i1_cooler_off *****************
  2831 ;; Defined at:
  2832 ;;		line 40 in file "io_prepherals.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		None
  2841 ;; Tracked objects:
  2842 ;;		On entry : 300/0
  2843 ;;		On exit  : 300/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_ISR
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function i1_cooler_off
  2861  059F                     i1_cooler_off:
  2862                           
  2863                           ;io_prepherals.c: 42: PORTCbits.RC4 = 0;
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in i1_cooler_off: []
  2867  059F  1207               	bcf	7,4	;volatile
  2868  05A0  0008               	return
  2869  05A1                     __end_ofi1_cooler_off:
  2870                           
  2871                           	psect	text22
  2872  0566                     __ptext22:	
  2873 ;; *************** function _sw_check *****************
  2874 ;; Defined at:
  2875 ;;		line 51 in file "io_prepherals.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      enum E1008
  2882 ;; Registers used:
  2883 ;;		wreg
  2884 ;; Tracked objects:
  2885 ;;		On entry : 200/0
  2886 ;;		On exit  : 300/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_ISR
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           
  2903                           ;psect for function _sw_check
  2904  0566                     _sw_check:
  2905                           
  2906                           ;io_prepherals.c: 53: if(PORTCbits.RC6 == 1)
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in _sw_check: [wreg]
  2910  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0567  1F07               	btfss	7,6	;volatile
  2912  0568  2D6B               	goto	i1l230
  2913                           
  2914                           ;io_prepherals.c: 54: {;io_prepherals.c: 55: return UP_SWITCH_PRESSED ;
  2915  0569  3000               	movlw	0
  2916  056A  0008               	return
  2917  056B                     i1l230:
  2918                           
  2919                           ;io_prepherals.c: 57: else;io_prepherals.c: 58: {;io_prepherals.c: 59: if( PORTCbits.RC7
      +                           == 1)
  2920  056B  1F87               	btfss	7,7	;volatile
  2921  056C  2D6F               	goto	i1l1518
  2922                           
  2923                           ;io_prepherals.c: 60: {;io_prepherals.c: 61: return DOWN_SWITCH_PRESSED ;
  2924  056D  3002               	movlw	2
  2925  056E  0008               	return
  2926  056F                     i1l1518:
  2927                           
  2928                           ;io_prepherals.c: 63: else;io_prepherals.c: 64: {;io_prepherals.c: 65: return NOTHING_PR
      +                          ESSED;
  2929  056F  3001               	movlw	1
  2930  0570  0008               	return
  2931  0571                     __end_of_sw_check:
  2932                           
  2933                           	psect	text23
  2934  059A                     __ptext23:	
  2935 ;; *************** function _reset_lm35 *****************
  2936 ;; Defined at:
  2937 ;;		line 37 in file "lm35.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		None
  2946 ;; Tracked objects:
  2947 ;;		On entry : 300/100
  2948 ;;		On exit  : 300/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0
  2954 ;;      Totals:         0       0       0       0       0
  2955 ;;Total ram usage:        0 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_ISR
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _reset_lm35
  2966  059A                     _reset_lm35:
  2967                           
  2968                           ;lm35.c: 39: PIR1bits.ADIF = 0 ;
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _reset_lm35: []
  2972  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2973  059B  130C               	bcf	12,6	;volatile
  2974  059C  0008               	return
  2975  059D                     __end_of_reset_lm35:
  2976                           
  2977                           	psect	text24
  2978  057A                     __ptext24:	
  2979 ;; *************** function _read_lm35 *****************
  2980 ;; Defined at:
  2981 ;;		line 42 in file "lm35.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  2    0[COMMON] unsigned short 
  2988 ;; Registers used:
  2989 ;;		wreg
  2990 ;; Tracked objects:
  2991 ;;		On entry : 300/0
  2992 ;;		On exit  : 300/100
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         2       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0
  2998 ;;      Totals:         2       0       0       0       0
  2999 ;;Total ram usage:        2 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_ISR
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _read_lm35
  3010  057A                     _read_lm35:
  3011                           
  3012                           ;lm35.c: 45: return ((ADRESH << 8) + ADRESL);
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _read_lm35: [wreg]
  3016  057A  081E               	movf	30,w	;volatile
  3017  057B  00F1               	movwf	?_read_lm35+1
  3018  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3019  057D  081E               	movf	30,w	;volatile
  3020  057E  00F0               	movwf	?_read_lm35
  3021  057F  0008               	return
  3022  0580                     __end_of_read_lm35:
  3023                           
  3024                           	psect	text25
  3025  02E2                     __ptext25:	
  3026 ;; *************** function ___fttol *****************
  3027 ;; Defined at:
  3028 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  f1              3   16[BANK0 ] float 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  lval            4   25[BANK0 ] unsigned long 
  3033 ;;  exp1            1   29[BANK0 ] unsigned char 
  3034 ;;  sign1           1   24[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  4   16[BANK0 ] long 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0
  3039 ;; Tracked objects:
  3040 ;;		On entry : 300/0
  3041 ;;		On exit  : 300/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       4       0       0       0
  3045 ;;      Locals:         0       6       0       0       0
  3046 ;;      Temps:          0       4       0       0       0
  3047 ;;      Totals:         0      14       0       0       0
  3048 ;;Total ram usage:       14 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_ISR
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function ___fttol
  3059  02E2                     ___fttol:
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3063  02E2  0830               	movf	___fttol@f1,w
  3064  02E3  00B4               	movwf	??___fttol
  3065  02E4  0831               	movf	___fttol@f1+1,w
  3066  02E5  00B5               	movwf	??___fttol+1
  3067  02E6  0832               	movf	___fttol@f1+2,w
  3068  02E7  00B6               	movwf	??___fttol+2
  3069  02E8  1003               	clrc
  3070  02E9  0D35               	rlf	??___fttol+1,w
  3071  02EA  0D36               	rlf	??___fttol+2,w
  3072  02EB  00B7               	movwf	??___fttol+3
  3073  02EC  0837               	movf	??___fttol+3,w
  3074  02ED  00BD               	movwf	___fttol@exp1
  3075  02EE  083D               	movf	___fttol@exp1,w
  3076  02EF  1D03               	btfss	3,2
  3077  02F0  2AFA               	goto	i1l1596
  3078  02F1                     i1l1592:
  3079  02F1  3000               	movlw	0
  3080  02F2  00B3               	movwf	?___fttol+3
  3081  02F3  3000               	movlw	0
  3082  02F4  00B2               	movwf	?___fttol+2
  3083  02F5  3000               	movlw	0
  3084  02F6  00B1               	movwf	?___fttol+1
  3085  02F7  3000               	movlw	0
  3086  02F8  00B0               	movwf	?___fttol
  3087  02F9  0008               	return
  3088  02FA                     i1l1596:
  3089  02FA  0830               	movf	___fttol@f1,w
  3090  02FB  00B4               	movwf	??___fttol
  3091  02FC  0831               	movf	___fttol@f1+1,w
  3092  02FD  00B5               	movwf	??___fttol+1
  3093  02FE  0832               	movf	___fttol@f1+2,w
  3094  02FF  00B6               	movwf	??___fttol+2
  3095  0300  3017               	movlw	23
  3096  0301                     u122_25:
  3097  0301  1003               	clrc
  3098  0302  0CB6               	rrf	??___fttol+2,f
  3099  0303  0CB5               	rrf	??___fttol+1,f
  3100  0304  0CB4               	rrf	??___fttol,f
  3101  0305  3EFF               	addlw	-1
  3102  0306  1D03               	skipz
  3103  0307  2B01               	goto	u122_25
  3104  0308  0834               	movf	??___fttol,w
  3105  0309  00B7               	movwf	??___fttol+3
  3106  030A  0837               	movf	??___fttol+3,w
  3107  030B  00B8               	movwf	___fttol@sign1
  3108  030C  17B1               	bsf	___fttol@f1+1,7
  3109  030D  30FF               	movlw	255
  3110  030E  05B0               	andwf	___fttol@f1,f
  3111  030F  30FF               	movlw	255
  3112  0310  05B1               	andwf	___fttol@f1+1,f
  3113  0311  3000               	movlw	0
  3114  0312  05B2               	andwf	___fttol@f1+2,f
  3115  0313  0830               	movf	___fttol@f1,w
  3116  0314  00B9               	movwf	___fttol@lval
  3117  0315  0831               	movf	___fttol@f1+1,w
  3118  0316  00BA               	movwf	___fttol@lval+1
  3119  0317  0832               	movf	___fttol@f1+2,w
  3120  0318  00BB               	movwf	___fttol@lval+2
  3121  0319  01BC               	clrf	___fttol@lval+3
  3122  031A  308E               	movlw	142
  3123  031B  02BD               	subwf	___fttol@exp1,f
  3124  031C  1FBD               	btfss	___fttol@exp1,7
  3125  031D  2B33               	goto	i1l1616
  3126  031E  083D               	movf	___fttol@exp1,w
  3127  031F  3A80               	xorlw	128
  3128  0320  3E8F               	addlw	143
  3129  0321  1C03               	btfss	3,0
  3130  0322  2AF1               	goto	i1l1592
  3131  0323                     i1l1614:
  3132  0323  3001               	movlw	1
  3133  0324                     u125_25:
  3134  0324  1003               	clrc
  3135  0325  0CBC               	rrf	___fttol@lval+3,f
  3136  0326  0CBB               	rrf	___fttol@lval+2,f
  3137  0327  0CBA               	rrf	___fttol@lval+1,f
  3138  0328  0CB9               	rrf	___fttol@lval,f
  3139  0329  3EFF               	addlw	-1
  3140  032A  1D03               	skipz
  3141  032B  2B24               	goto	u125_25
  3142  032C  3001               	movlw	1
  3143  032D  00B4               	movwf	??___fttol
  3144  032E  0834               	movf	??___fttol,w
  3145  032F  07BD               	addwf	___fttol@exp1,f
  3146  0330  1903               	btfsc	3,2
  3147  0331  2B46               	goto	i1l1624
  3148  0332  2B23               	goto	i1l1614
  3149  0333                     i1l1616:
  3150  0333  3018               	movlw	24
  3151  0334  023D               	subwf	___fttol@exp1,w
  3152  0335  1803               	btfsc	3,0
  3153  0336  2AF1               	goto	i1l1592
  3154  0337                     i1l660:
  3155  0337  083D               	movf	___fttol@exp1,w
  3156  0338  1903               	btfsc	3,2
  3157  0339  2B46               	goto	i1l1624
  3158  033A  3001               	movlw	1
  3159  033B  00B4               	movwf	??___fttol
  3160  033C                     u128_25:
  3161  033C  1003               	clrc
  3162  033D  0DB9               	rlf	___fttol@lval,f
  3163  033E  0DBA               	rlf	___fttol@lval+1,f
  3164  033F  0DBB               	rlf	___fttol@lval+2,f
  3165  0340  0DBC               	rlf	___fttol@lval+3,f
  3166  0341  0BB4               	decfsz	??___fttol,f
  3167  0342  2B3C               	goto	u128_25
  3168  0343  3001               	movlw	1
  3169  0344  02BD               	subwf	___fttol@exp1,f
  3170  0345  2B37               	goto	i1l660
  3171  0346                     i1l1624:
  3172  0346  0838               	movf	___fttol@sign1,w
  3173  0347  1903               	btfsc	3,2
  3174  0348  2B54               	goto	i1l1628
  3175  0349  09B9               	comf	___fttol@lval,f
  3176  034A  09BA               	comf	___fttol@lval+1,f
  3177  034B  09BB               	comf	___fttol@lval+2,f
  3178  034C  09BC               	comf	___fttol@lval+3,f
  3179  034D  0AB9               	incf	___fttol@lval,f
  3180  034E  1903               	skipnz
  3181  034F  0ABA               	incf	___fttol@lval+1,f
  3182  0350  1903               	skipnz
  3183  0351  0ABB               	incf	___fttol@lval+2,f
  3184  0352  1903               	skipnz
  3185  0353  0ABC               	incf	___fttol@lval+3,f
  3186  0354                     i1l1628:
  3187  0354  083C               	movf	___fttol@lval+3,w
  3188  0355  00B3               	movwf	?___fttol+3
  3189  0356  083B               	movf	___fttol@lval+2,w
  3190  0357  00B2               	movwf	?___fttol+2
  3191  0358  083A               	movf	___fttol@lval+1,w
  3192  0359  00B1               	movwf	?___fttol+1
  3193  035A  0839               	movf	___fttol@lval,w
  3194  035B  00B0               	movwf	?___fttol
  3195  035C  0008               	return
  3196  035D                     __end_of___fttol:
  3197                           
  3198                           	psect	text26
  3199  00D9                     __ptext26:	
  3200 ;; *************** function ___ftmul *****************
  3201 ;; Defined at:
  3202 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  f1              3    0[BANK0 ] float 
  3205 ;;  f2              3    3[BANK0 ] float 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3208 ;;  sign            1   15[BANK0 ] unsigned char 
  3209 ;;  cntr            1   14[BANK0 ] unsigned char 
  3210 ;;  exp             1   10[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  3    0[BANK0 ] float 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, pclath, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 300/0
  3217 ;;		On exit  : 300/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         0       6       0       0       0
  3221 ;;      Locals:         0       6       0       0       0
  3222 ;;      Temps:          0       4       0       0       0
  3223 ;;      Totals:         0      16       0       0       0
  3224 ;;Total ram usage:       16 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    1
  3227 ;; This function calls:
  3228 ;;		___ftpack
  3229 ;; This function is called by:
  3230 ;;		_ISR
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function ___ftmul
  3236  00D9                     ___ftmul:
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3240  00D9  0820               	movf	___ftmul@f1,w
  3241  00DA  00A6               	movwf	??___ftmul
  3242  00DB  0821               	movf	___ftmul@f1+1,w
  3243  00DC  00A7               	movwf	??___ftmul+1
  3244  00DD  0822               	movf	___ftmul@f1+2,w
  3245  00DE  00A8               	movwf	??___ftmul+2
  3246  00DF  1003               	clrc
  3247  00E0  0D27               	rlf	??___ftmul+1,w
  3248  00E1  0D28               	rlf	??___ftmul+2,w
  3249  00E2  00A9               	movwf	??___ftmul+3
  3250  00E3  0829               	movf	??___ftmul+3,w
  3251  00E4  00AA               	movwf	___ftmul@exp
  3252  00E5  082A               	movf	___ftmul@exp,w
  3253  00E6  1D03               	btfss	3,2
  3254  00E7  28EF               	goto	i1l1540
  3255  00E8  3000               	movlw	0
  3256  00E9  00A0               	movwf	?___ftmul
  3257  00EA  3000               	movlw	0
  3258  00EB  00A1               	movwf	?___ftmul+1
  3259  00EC  3000               	movlw	0
  3260  00ED  00A2               	movwf	?___ftmul+2
  3261  00EE  0008               	return
  3262  00EF                     i1l1540:
  3263  00EF  0823               	movf	___ftmul@f2,w
  3264  00F0  00A6               	movwf	??___ftmul
  3265  00F1  0824               	movf	___ftmul@f2+1,w
  3266  00F2  00A7               	movwf	??___ftmul+1
  3267  00F3  0825               	movf	___ftmul@f2+2,w
  3268  00F4  00A8               	movwf	??___ftmul+2
  3269  00F5  1003               	clrc
  3270  00F6  0D27               	rlf	??___ftmul+1,w
  3271  00F7  0D28               	rlf	??___ftmul+2,w
  3272  00F8  00A9               	movwf	??___ftmul+3
  3273  00F9  0829               	movf	??___ftmul+3,w
  3274  00FA  00AF               	movwf	___ftmul@sign
  3275  00FB  082F               	movf	___ftmul@sign,w
  3276  00FC  1D03               	btfss	3,2
  3277  00FD  2905               	goto	i1l1546
  3278  00FE  3000               	movlw	0
  3279  00FF  00A0               	movwf	?___ftmul
  3280  0100  3000               	movlw	0
  3281  0101  00A1               	movwf	?___ftmul+1
  3282  0102  3000               	movlw	0
  3283  0103  00A2               	movwf	?___ftmul+2
  3284  0104  0008               	return
  3285  0105                     i1l1546:
  3286  0105  082F               	movf	___ftmul@sign,w
  3287  0106  3E7B               	addlw	123
  3288  0107  00A6               	movwf	??___ftmul
  3289  0108  0826               	movf	??___ftmul,w
  3290  0109  07AA               	addwf	___ftmul@exp,f
  3291  010A  0822               	movf	___ftmul@f1+2,w
  3292  010B  00A6               	movwf	??___ftmul
  3293  010C  0826               	movf	??___ftmul,w
  3294  010D  00AF               	movwf	___ftmul@sign
  3295  010E  0825               	movf	___ftmul@f2+2,w
  3296  010F  00A6               	movwf	??___ftmul
  3297  0110  0826               	movf	??___ftmul,w
  3298  0111  06AF               	xorwf	___ftmul@sign,f
  3299  0112  3080               	movlw	128
  3300  0113  00A6               	movwf	??___ftmul
  3301  0114  0826               	movf	??___ftmul,w
  3302  0115  05AF               	andwf	___ftmul@sign,f
  3303  0116  17A1               	bsf	___ftmul@f1+1,7
  3304  0117  17A4               	bsf	___ftmul@f2+1,7
  3305  0118  30FF               	movlw	255
  3306  0119  05A3               	andwf	___ftmul@f2,f
  3307  011A  30FF               	movlw	255
  3308  011B  05A4               	andwf	___ftmul@f2+1,f
  3309  011C  3000               	movlw	0
  3310  011D  05A5               	andwf	___ftmul@f2+2,f
  3311  011E  3000               	movlw	0
  3312  011F  00AB               	movwf	___ftmul@f3_as_product
  3313  0120  3000               	movlw	0
  3314  0121  00AC               	movwf	___ftmul@f3_as_product+1
  3315  0122  3000               	movlw	0
  3316  0123  00AD               	movwf	___ftmul@f3_as_product+2
  3317  0124  3007               	movlw	7
  3318  0125  00A6               	movwf	??___ftmul
  3319  0126  0826               	movf	??___ftmul,w
  3320  0127  00AE               	movwf	___ftmul@cntr
  3321  0128                     i1l1564:
  3322  0128  1C20               	btfss	___ftmul@f1,0
  3323  0129  2938               	goto	i1l1568
  3324  012A  0823               	movf	___ftmul@f2,w
  3325  012B  07AB               	addwf	___ftmul@f3_as_product,f
  3326  012C  0824               	movf	___ftmul@f2+1,w
  3327  012D  1103               	clrz
  3328  012E  1803               	skipnc
  3329  012F  0A24               	incf	___ftmul@f2+1,w
  3330  0130  1D03               	btfss	3,2
  3331  0131  07AC               	addwf	___ftmul@f3_as_product+1,f
  3332  0132  0825               	movf	___ftmul@f2+2,w
  3333  0133  1103               	clrz
  3334  0134  1803               	skipnc
  3335  0135  0A25               	incf	___ftmul@f2+2,w
  3336  0136  1D03               	btfss	3,2
  3337  0137  07AD               	addwf	___ftmul@f3_as_product+2,f
  3338  0138                     i1l1568:
  3339  0138  3001               	movlw	1
  3340  0139                     u113_25:
  3341  0139  1003               	clrc
  3342  013A  0CA2               	rrf	___ftmul@f1+2,f
  3343  013B  0CA1               	rrf	___ftmul@f1+1,f
  3344  013C  0CA0               	rrf	___ftmul@f1,f
  3345  013D  3EFF               	addlw	-1
  3346  013E  1D03               	skipz
  3347  013F  2939               	goto	u113_25
  3348  0140  3001               	movlw	1
  3349  0141                     u114_25:
  3350  0141  1003               	clrc
  3351  0142  0DA3               	rlf	___ftmul@f2,f
  3352  0143  0DA4               	rlf	___ftmul@f2+1,f
  3353  0144  0DA5               	rlf	___ftmul@f2+2,f
  3354  0145  3EFF               	addlw	-1
  3355  0146  1D03               	skipz
  3356  0147  2941               	goto	u114_25
  3357  0148  3001               	movlw	1
  3358  0149  02AE               	subwf	___ftmul@cntr,f
  3359  014A  1D03               	btfss	3,2
  3360  014B  2928               	goto	i1l1564
  3361  014C  3009               	movlw	9
  3362  014D  00A6               	movwf	??___ftmul
  3363  014E  0826               	movf	??___ftmul,w
  3364  014F  00AE               	movwf	___ftmul@cntr
  3365  0150                     i1l1576:
  3366  0150  1C20               	btfss	___ftmul@f1,0
  3367  0151  2960               	goto	i1l1580
  3368  0152  0823               	movf	___ftmul@f2,w
  3369  0153  07AB               	addwf	___ftmul@f3_as_product,f
  3370  0154  0824               	movf	___ftmul@f2+1,w
  3371  0155  1103               	clrz
  3372  0156  1803               	skipnc
  3373  0157  0A24               	incf	___ftmul@f2+1,w
  3374  0158  1D03               	btfss	3,2
  3375  0159  07AC               	addwf	___ftmul@f3_as_product+1,f
  3376  015A  0825               	movf	___ftmul@f2+2,w
  3377  015B  1103               	clrz
  3378  015C  1803               	skipnc
  3379  015D  0A25               	incf	___ftmul@f2+2,w
  3380  015E  1D03               	btfss	3,2
  3381  015F  07AD               	addwf	___ftmul@f3_as_product+2,f
  3382  0160                     i1l1580:
  3383  0160  3001               	movlw	1
  3384  0161                     u118_25:
  3385  0161  1003               	clrc
  3386  0162  0CA2               	rrf	___ftmul@f1+2,f
  3387  0163  0CA1               	rrf	___ftmul@f1+1,f
  3388  0164  0CA0               	rrf	___ftmul@f1,f
  3389  0165  3EFF               	addlw	-1
  3390  0166  1D03               	skipz
  3391  0167  2961               	goto	u118_25
  3392  0168  3001               	movlw	1
  3393  0169                     u119_25:
  3394  0169  1003               	clrc
  3395  016A  0CAD               	rrf	___ftmul@f3_as_product+2,f
  3396  016B  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3397  016C  0CAB               	rrf	___ftmul@f3_as_product,f
  3398  016D  3EFF               	addlw	-1
  3399  016E  1D03               	skipz
  3400  016F  2969               	goto	u119_25
  3401  0170  3001               	movlw	1
  3402  0171  02AE               	subwf	___ftmul@cntr,f
  3403  0172  1D03               	btfss	3,2
  3404  0173  2950               	goto	i1l1576
  3405  0174  082B               	movf	___ftmul@f3_as_product,w
  3406  0175  00F0               	movwf	___ftpack@arg
  3407  0176  082C               	movf	___ftmul@f3_as_product+1,w
  3408  0177  00F1               	movwf	___ftpack@arg+1
  3409  0178  082D               	movf	___ftmul@f3_as_product+2,w
  3410  0179  00F2               	movwf	___ftpack@arg+2
  3411  017A  082A               	movf	___ftmul@exp,w
  3412  017B  00A6               	movwf	??___ftmul
  3413  017C  0826               	movf	??___ftmul,w
  3414  017D  00F3               	movwf	___ftpack@exp
  3415  017E  082F               	movf	___ftmul@sign,w
  3416  017F  00A7               	movwf	??___ftmul+1
  3417  0180  0827               	movf	??___ftmul+1,w
  3418  0181  00F4               	movwf	___ftpack@sign
  3419  0182  120A  118A  235D   	fcall	___ftpack
  3420  0185  0870               	movf	?___ftpack,w
  3421  0186  00A0               	movwf	?___ftmul
  3422  0187  0871               	movf	?___ftpack+1,w
  3423  0188  00A1               	movwf	?___ftmul+1
  3424  0189  0872               	movf	?___ftpack+2,w
  3425  018A  00A2               	movwf	?___ftmul+2
  3426  018B  0008               	return
  3427  018C                     __end_of___ftmul:
  3428                           
  3429                           	psect	text27
  3430  04FB                     __ptext27:	
  3431 ;; *************** function ___awtoft *****************
  3432 ;; Defined at:
  3433 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  c               2    8[COMMON] int 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  sign            1   13[COMMON] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  3    8[COMMON] float 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0, pclath, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 300/0
  3444 ;;		On exit  : 300/0
  3445 ;;		Unchanged: 300/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         3       0       0       0       0
  3448 ;;      Locals:         1       0       0       0       0
  3449 ;;      Temps:          2       0       0       0       0
  3450 ;;      Totals:         6       0       0       0       0
  3451 ;;Total ram usage:        6 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    1
  3454 ;; This function calls:
  3455 ;;		___ftpack
  3456 ;; This function is called by:
  3457 ;;		_ISR
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function ___awtoft
  3463  04FB                     ___awtoft:
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3467  04FB  01FD               	clrf	___awtoft@sign
  3468  04FC  1FF9               	btfss	___awtoft@c+1,7
  3469  04FD  2D05               	goto	i1l1530
  3470  04FE  09F8               	comf	___awtoft@c,f
  3471  04FF  09F9               	comf	___awtoft@c+1,f
  3472  0500  0AF8               	incf	___awtoft@c,f
  3473  0501  1903               	skipnz
  3474  0502  0AF9               	incf	___awtoft@c+1,f
  3475  0503  01FD               	clrf	___awtoft@sign
  3476  0504  0AFD               	incf	___awtoft@sign,f
  3477  0505                     i1l1530:
  3478  0505  0878               	movf	___awtoft@c,w
  3479  0506  00F0               	movwf	___ftpack@arg
  3480  0507  0879               	movf	___awtoft@c+1,w
  3481  0508  00F1               	movwf	___ftpack@arg+1
  3482  0509  01F2               	clrf	___ftpack@arg+2
  3483  050A  308E               	movlw	142
  3484  050B  00FB               	movwf	??___awtoft
  3485  050C  087B               	movf	??___awtoft,w
  3486  050D  00F3               	movwf	___ftpack@exp
  3487  050E  087D               	movf	___awtoft@sign,w
  3488  050F  00FC               	movwf	??___awtoft+1
  3489  0510  087C               	movf	??___awtoft+1,w
  3490  0511  00F4               	movwf	___ftpack@sign
  3491  0512  120A  118A  235D   	fcall	___ftpack
  3492  0515  0870               	movf	?___ftpack,w
  3493  0516  00F8               	movwf	?___awtoft
  3494  0517  0871               	movf	?___ftpack+1,w
  3495  0518  00F9               	movwf	?___awtoft+1
  3496  0519  0872               	movf	?___ftpack+2,w
  3497  051A  00FA               	movwf	?___awtoft+2
  3498  051B  0008               	return
  3499  051C                     __end_of___awtoft:
  3500                           
  3501                           	psect	text28
  3502  035D                     __ptext28:	
  3503 ;; *************** function ___ftpack *****************
  3504 ;; Defined at:
  3505 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  arg             3    0[COMMON] unsigned um
  3508 ;;  exp             1    3[COMMON] unsigned char 
  3509 ;;  sign            1    4[COMMON] unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  3    0[COMMON] float 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 300/0
  3518 ;;		On exit  : 300/0
  3519 ;;		Unchanged: 300/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         5       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0
  3523 ;;      Temps:          3       0       0       0       0
  3524 ;;      Totals:         8       0       0       0       0
  3525 ;;Total ram usage:        8 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		___awtoft
  3531 ;;		___ftmul
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function ___ftpack
  3537  035D                     ___ftpack:
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3541  035D  0873               	movf	___ftpack@exp,w
  3542  035E  1903               	btfsc	3,2
  3543  035F  2B65               	goto	i1l1380
  3544  0360  0872               	movf	___ftpack@arg+2,w
  3545  0361  0471               	iorwf	___ftpack@arg+1,w
  3546  0362  0470               	iorwf	___ftpack@arg,w
  3547  0363  1D03               	skipz
  3548  0364  2B78               	goto	i1l1386
  3549  0365                     i1l1380:
  3550  0365  3000               	movlw	0
  3551  0366  00F0               	movwf	?___ftpack
  3552  0367  3000               	movlw	0
  3553  0368  00F1               	movwf	?___ftpack+1
  3554  0369  3000               	movlw	0
  3555  036A  00F2               	movwf	?___ftpack+2
  3556  036B  0008               	return
  3557  036C                     i1l1384:
  3558  036C  3001               	movlw	1
  3559  036D  00F5               	movwf	??___ftpack
  3560  036E  0875               	movf	??___ftpack,w
  3561  036F  07F3               	addwf	___ftpack@exp,f
  3562  0370  3001               	movlw	1
  3563  0371                     u90_25:
  3564  0371  1003               	clrc
  3565  0372  0CF2               	rrf	___ftpack@arg+2,f
  3566  0373  0CF1               	rrf	___ftpack@arg+1,f
  3567  0374  0CF0               	rrf	___ftpack@arg,f
  3568  0375  3EFF               	addlw	-1
  3569  0376  1D03               	skipz
  3570  0377  2B71               	goto	u90_25
  3571  0378                     i1l1386:
  3572  0378  30FE               	movlw	254
  3573  0379  0572               	andwf	___ftpack@arg+2,w
  3574  037A  1903               	btfsc	3,2
  3575  037B  2B93               	goto	i1l569
  3576  037C  2B6C               	goto	i1l1384
  3577  037D                     i1l1388:
  3578  037D  3001               	movlw	1
  3579  037E  00F5               	movwf	??___ftpack
  3580  037F  0875               	movf	??___ftpack,w
  3581  0380  07F3               	addwf	___ftpack@exp,f
  3582  0381  3001               	movlw	1
  3583  0382  07F0               	addwf	___ftpack@arg,f
  3584  0383  3000               	movlw	0
  3585  0384  1803               	skipnc
  3586  0385  3001               	movlw	1
  3587  0386  07F1               	addwf	___ftpack@arg+1,f
  3588  0387  3000               	movlw	0
  3589  0388  1803               	skipnc
  3590  0389  3001               	movlw	1
  3591  038A  07F2               	addwf	___ftpack@arg+2,f
  3592  038B  3001               	movlw	1
  3593  038C                     u92_25:
  3594  038C  1003               	clrc
  3595  038D  0CF2               	rrf	___ftpack@arg+2,f
  3596  038E  0CF1               	rrf	___ftpack@arg+1,f
  3597  038F  0CF0               	rrf	___ftpack@arg,f
  3598  0390  3EFF               	addlw	-1
  3599  0391  1D03               	skipz
  3600  0392  2B8C               	goto	u92_25
  3601  0393                     i1l569:
  3602  0393  30FF               	movlw	255
  3603  0394  0572               	andwf	___ftpack@arg+2,w
  3604  0395  1903               	btfsc	3,2
  3605  0396  2BA6               	goto	i1l1396
  3606  0397  2B7D               	goto	i1l1388
  3607  0398                     i1l1398:
  3608  0398  3002               	movlw	2
  3609  0399  0273               	subwf	___ftpack@exp,w
  3610  039A  1C03               	btfss	3,0
  3611  039B  2BA8               	goto	i1l576
  3612  039C  3001               	movlw	1
  3613  039D  02F3               	subwf	___ftpack@exp,f
  3614  039E  3001               	movlw	1
  3615  039F                     u94_25:
  3616  039F  1003               	clrc
  3617  03A0  0DF0               	rlf	___ftpack@arg,f
  3618  03A1  0DF1               	rlf	___ftpack@arg+1,f
  3619  03A2  0DF2               	rlf	___ftpack@arg+2,f
  3620  03A3  3EFF               	addlw	-1
  3621  03A4  1D03               	skipz
  3622  03A5  2B9F               	goto	u94_25
  3623  03A6                     i1l1396:
  3624  03A6  1FF1               	btfss	___ftpack@arg+1,7
  3625  03A7  2B98               	goto	i1l1398
  3626  03A8                     i1l576:
  3627  03A8  1873               	btfsc	___ftpack@exp,0
  3628  03A9  2BB0               	goto	i1l577
  3629  03AA  30FF               	movlw	255
  3630  03AB  05F0               	andwf	___ftpack@arg,f
  3631  03AC  307F               	movlw	127
  3632  03AD  05F1               	andwf	___ftpack@arg+1,f
  3633  03AE  30FF               	movlw	255
  3634  03AF  05F2               	andwf	___ftpack@arg+2,f
  3635  03B0                     i1l577:
  3636  03B0  1003               	clrc
  3637  03B1  0CF3               	rrf	___ftpack@exp,f
  3638  03B2  0873               	movf	___ftpack@exp,w
  3639  03B3  00F5               	movwf	??___ftpack
  3640  03B4  01F6               	clrf	??___ftpack+1
  3641  03B5  01F7               	clrf	??___ftpack+2
  3642  03B6  3010               	movlw	16
  3643  03B7                     u98_25:
  3644  03B7  1003               	clrc
  3645  03B8  0DF5               	rlf	??___ftpack,f
  3646  03B9  0DF6               	rlf	??___ftpack+1,f
  3647  03BA  0DF7               	rlf	??___ftpack+2,f
  3648  03BB  3EFF               	addlw	-1
  3649  03BC  1D03               	skipz
  3650  03BD  2BB7               	goto	u98_25
  3651  03BE  0875               	movf	??___ftpack,w
  3652  03BF  04F0               	iorwf	___ftpack@arg,f
  3653  03C0  0876               	movf	??___ftpack+1,w
  3654  03C1  04F1               	iorwf	___ftpack@arg+1,f
  3655  03C2  0877               	movf	??___ftpack+2,w
  3656  03C3  04F2               	iorwf	___ftpack@arg+2,f
  3657  03C4  0874               	movf	___ftpack@sign,w
  3658  03C5  1903               	btfsc	3,2
  3659  03C6  0008               	return
  3660  03C7  17F2               	bsf	___ftpack@arg+2,7
  3661  03C8  0008               	return
  3662  03C9                     __end_of___ftpack:
  3663  007E                     btemp	set	126	;btemp
  3664  007E                     wtemp0	set	126
  3665                           
  3666                           	psect	config
  3667                           
  3668                           ;Config register CONFIG @ 0x2007
  3669                           ;	Oscillator Selection bits
  3670                           ;	FOSC = HS, HS oscillator
  3671                           ;	Watchdog Timer Enable bit
  3672                           ;	WDTE = OFF, WDT disabled
  3673                           ;	Power-up Timer Enable bit
  3674                           ;	PWRTE = ON, PWRT enabled
  3675                           ;	Brown-out Reset Enable bit
  3676                           ;	BOREN = ON, BOR enabled
  3677                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3678                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3679                           ;	Data EEPROM Memory Code Protection bit
  3680                           ;	CPD = OFF, Data EEPROM code protection off
  3681                           ;	Flash Program Memory Write Enable bits
  3682                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3683                           ;	In-Circuit Debugger Mode bit
  3684                           ;	DEBUG = 0x1, unprogrammed default
  3685                           ;	Flash Program Memory Code Protection bit
  3686                           ;	CP = OFF, Code protection off
  3687  2007                     	org	8199
  3688  2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      43
    BANK1            80     30      33
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->_start_lm35
    _write_7seg->___lwmod
    _write_7seg->_evaluate
    _write_7seg->_selec_7seg
    ___lwdiv->___lwmod

Critical Paths under _ISR in BANK0

    _ISR->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    _main->_DEL_write_7seg
    _DEL_write_7seg->_write_7seg
    _write_7seg->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2814
                                             25 BANK1      5     5      0
                     _DEL_write_7seg
                         _cooler_off
                          _cooler_on
                         _heater_off
                          _heater_on
                          _init_7seg
                 _init_cooler_heater
                          _init_lm35
                      _init_switches
                  _prepheral_testing
                         _start_lm35
                         _write_7seg
 ---------------------------------------------------------------------------------
 (1) _start_lm35                                           3     3      0      31
                                             37 BANK0      1     1      0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _prepheral_testing                                    7     7      0     198
                                              0 BANK1      7     7      0
                         _heater_off
                          _heater_on
 ---------------------------------------------------------------------------------
 (2) _heater_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_switches                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_lm35                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_cooler_heater                                   0     0      0       0
                         _cooler_off
                         _heater_off
 ---------------------------------------------------------------------------------
 (2) _heater_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cooler_off                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_7seg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cooler_on                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DEL_write_7seg                                       6     2      4    1373
                                             19 BANK1      6     2      4
                         _write_7seg
 ---------------------------------------------------------------------------------
 (1) _write_7seg                                           6     4      2    1144
                                             13 BANK1      6     4      2
                            ___lwdiv
                            ___lwmod
                           _evaluate
                         _selec_7seg
 ---------------------------------------------------------------------------------
 (2) _selec_7seg                                           1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _evaluate                                             1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     492
                                             37 BANK0      1     1      0
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     348
                                              5 BANK1      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    4884
                                             30 BANK0      7     7      0
                           ___awtoft
                            ___ftmul
                            ___fttol
                          _read_lm35
                         _reset_lm35
                           _sw_check
                       i1_cooler_off
                        i1_cooler_on
                       i1_heater_off
                        i1_heater_on
 ---------------------------------------------------------------------------------
 (5) i1_heater_on                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_heater_off                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_cooler_on                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) i1_cooler_off                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _sw_check                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _reset_lm35                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_lm35                                            2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     385
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2463
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2013
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1869
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEL_write_7seg
     _write_7seg
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
       _evaluate
       _selec_7seg
   _cooler_off
   _cooler_on
   _heater_off
   _heater_on
   _init_7seg
   _init_cooler_heater
     _cooler_off
     _heater_off
   _init_lm35
   _init_switches
   _prepheral_testing
     _heater_off
     _heater_on
   _start_lm35
   _write_7seg
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _evaluate
     _selec_7seg

 _ISR (ROOT)
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _read_lm35
   _reset_lm35
   _sw_check
   i1_cooler_off
   i1_cooler_on
   i1_heater_off
   i1_heater_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1E      21       7       41.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 09 07:17:39 2022

                          _X 004A                           _X2 0049                          l130 053F  
                        l132 054A                          l128 053C                          _GIE 005F  
                        _ISR 023B                          u805 0496                          u765 0474  
                        u785 0480                          u795 048C  __size_of_init_cooler_heater 000E  
                       ?_ISR 0070                         l1320 047F                         l1330 04A0  
                       l1306 0448                         l1326 0495                         l1318 0471  
                       l1280 042A                         l1290 0439                         l1282 042D  
                       l1292 043C                         l1284 0430                         l1276 0542  
                       l1294 043F                         l1286 0433                         l1296 0442  
                       l1288 0436                         l1298 0445                         l1802 01CB  
                       l1750 04AB                         l1752 04BB                         l1760 04D4  
                       l1756 04C9                         l1836 051E                         l1852 0053  
                       l1862 005F                         l1870 0084                         l1880 00A7  
                       l1872 0094                         l1786 0190                         l1884 00B6  
                       l1876 009D                         l1894 00CE                         _ADIE 0466  
                       _ADIF 0066                         u1505 04AE                         u1525 04C1  
                       u1605 0524                         u1535 04CA                         u1625 007E  
                       u1554 019A                         u1555 0198                         u1707 0047  
                       u1565 01C2                         u1717 04F5                         u1574 01D5  
                       u1575 01D3                         u1727 01AA                         u1585 01FD  
                       u1737 01E5                         u1747 0210                         u1595 04E6  
                       u1757 0224                         u1767 0233                         u1777 040B  
                       u1787 0422                         _PEIE 005E                         _INTE 005C  
                       _INTF 0059                         i1l81 02DA                         _main 0020  
               ___ftpack@arg 0070                 ___ftpack@exp 0073                         btemp 007E  
                       start 000E                  i1_heater_on 0589                 ___ftmul@cntr 002E  
               ___ftmul@sign 002F                  i1_cooler_on 0597        __size_ofi1_heater_off 0004  
                      ??_ISR 003E                 ___fttol@exp1 003D                 ___fttol@lval 0039  
                      ?_main 0070              __end_of___ftmul 018C              __end_of___fttol 035D  
            __end_of___lwdiv 04A5                        i1l230 056B              __end_of___lwmod 04D9  
                      i1l660 0337                        i1l576 03A8                        i1l577 03B0  
                      i1l569 0393                        _PORTB 0006                        _TRISB 0086  
                      u90_25 0371                        u92_25 038C        __size_ofi1_cooler_off 0002  
                      u94_25 039F                        u98_25 03B7           _current_temprature 00BF  
              ___awtoft@sign 007D             ??_DEL_write_7seg 0046                ___ftpack@sign 0074  
                      main@i 00BC                        pclath 000A                        status 0003  
                      wtemp0 007E                 i1_heater_off 058D              __initialization 0011  
               __end_of_main 00D9                 i1_cooler_off 059F                       ??_main 00B9  
              ___fttol@sign1 0038                       ISR@tmp 0043                       _ADCON0 001F  
                     _ADCON1 009F                       _ADRESH 001E                       _ADRESL 009E  
           __end_of___awtoft 051C             __end_of___ftpack 03C9                       i1l1530 0505  
                     i1l1380 0365                       i1l1540 00EF                       i1l1614 0323  
                     i1l1518 056F                       i1l1384 036C                       i1l1624 0346  
                     i1l1616 0333                       i1l1386 0378                       i1l1546 0105  
                     i1l1722 02AF                       i1l1396 03A6                       i1l1388 037D  
                     i1l1580 0160                       i1l1564 0128                       i1l1628 0354  
                     i1l1716 0295                       i1l1708 0276                       u113_25 0139  
                     i1l1398 0398                       i1l1734 02CC                       i1l1726 02BE  
                     i1l1576 0150                       i1l1568 0138                       i1l1592 02F1  
                     i1l1738 02D6                       i1l1596 02FA                       u114_25 0141  
                     u122_25 0301                       u125_25 0324                       _INTEDG 040E  
                     u118_25 0161                       u119_25 0169                       u128_25 033C  
                     u180_27 02A5                       u179_27 0288                    ??___ftmul 0026  
                  ??___fttol 0034                    ??___lwdiv 00A9             __end_of_evaluate 0469  
                  ??___lwmod 0045        ___ftmul@f3_as_product 002B                       saved_w 007E  
           __end_of_sw_check 0571       __size_of_init_switches 0003      __end_of__initialization 001C  
                 ___awtoft@c 0078                   ___ftmul@f1 0020                   ___ftmul@f2 0023  
                 ___fttol@f1 0030               __pcstackCOMMON 0070           __size_of_heater_on 0004  
         __size_of_cooler_on 0003                   __pbssBANK0 0046                   __pbssBANK1 00BE  
         __size_of_init_7seg 0009           __size_of_init_lm35 000D           __size_of_read_lm35 0006  
               ?i1_heater_on 0070                   __pmaintext 0020                 ?i1_cooler_on 0070  
              _init_switches 0591                   __pintentry 0004                    ?___awtoft 0078  
                  ?___ftpack 0070                   _heater_off 0580   __end_of_init_cooler_heater 0559  
              selec_7seg@sel 0045                      _GO_DONE 00FA                   _cooler_off 059D  
                  ?_evaluate 0070            __end_of_heater_on 0589               ?_init_switches 0070  
                  ?_sw_check 0070            __end_of_cooler_on 0597                      ___ftmul 00D9  
                    ___fttol 02E2                      ___lwdiv 0469                      ___lwmod 04A5  
                 ??___awtoft 007B                   ??___ftpack 0075                      __ptext1 04D9  
                    __ptext2 018C                      __ptext3 0585                      __ptext4 0591  
                    __ptext5 0559                      __ptext6 054B                      __ptext7 0580  
                    __ptext8 059D                      __ptext9 0571            __end_of_init_7seg 057A  
               __size_of_ISR 00A7            __end_of_init_lm35 0566            __end_of_read_lm35 0580  
                 _selec_7seg 0538         end_of_initialization 001C                   ??_evaluate 0045  
                 _reset_lm35 059A                 write_7seg@d1 00B1                 write_7seg@d2 00B2  
                 ??_sw_check 0070                   _seven_data 0046               _Timeout_Action 0048  
                  _PORTCbits 0007                    _PORTDbits 0008                  ?_heater_off 0070  
                  _TRISCbits 0087                    _TRISDbits 0088                  ?_cooler_off 0070  
                 _start_lm35 04D9      __size_of_DEL_write_7seg 001C              ??_init_switches 0045  
                ___ftmul@exp 002A         __size_ofi1_heater_on 0004                   _write_7seg 03C9  
       __size_ofi1_cooler_on 0003            _prepheral_testing 018C          start_initialization 0011  
         ?_prepheral_testing 0070                  __end_of_ISR 02E2                  ?_selec_7seg 0070  
        ??_prepheral_testing 00A0          __size_of_heater_off 0005                  ?_reset_lm35 0070  
        __size_of_cooler_off 0002    __end_of_prepheral_testing 023B            __size_of___awtoft 0021  
          __size_of___ftpack 006C                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0                  ?_start_lm35 0070           _init_cooler_heater 054B  
         _desired_temprature 00C0                ?i1_heater_off 0070            __size_of_evaluate 0042  
        ?_init_cooler_heater 0070             ___lwdiv@dividend 00A7                ?i1_cooler_off 0070  
                   ?___ftmul 0020                     ?___fttol 0030                  ?_write_7seg 00AD  
                   ?___lwdiv 00A5                     ?___lwmod 00A0                    _heater_on 0585  
        __size_of_selec_7seg 0013            __size_of_sw_check 000B                    _cooler_on 0594  
       ??_init_cooler_heater 0045                    _init_7seg 0571          __size_of_reset_lm35 0003  
                  _init_lm35 0559             ___lwdiv@quotient 00AA                    _read_lm35 057A  
             ??i1_heater_off 0070            interrupt_function 0004               _DEL_write_7seg 051C  
                   _PIR1bits 000C                  write_7seg@x 00AD               ??i1_cooler_off 0070  
                 ?_heater_on 0070   __size_of_prepheral_testing 00AF          __size_of_start_lm35 0022  
               ??_heater_off 0045                   ?_cooler_on 0070                   ?_init_7seg 0070  
                 ?_init_lm35 0070                   ?_read_lm35 0070                 ??_cooler_off 0045  
        __size_of_write_7seg 005E       __end_of_DEL_write_7seg 0538                    evaluate@x 0045  
         __end_of_heater_off 0585             __size_of___ftmul 00B3             __size_of___fttol 007B  
           __size_of___lwdiv 003C             __size_of___lwmod 0034                     ___awtoft 04FB  
                   ___ftpack 035D           __end_of_cooler_off 059F              ___lwdiv@divisor 00A5  
            ___lwdiv@counter 00AC                     __ptext10 0594                     __ptext11 051C  
                   __ptext20 0597                     __ptext12 03C9                     __ptext21 059F  
                   __ptext13 0538                     __ptext22 0566                     __ptext14 0427  
                   __ptext23 059A                     __ptext15 04A5                     __ptext24 057A  
                   __ptext16 0469                     __ptext25 02E2                     __ptext17 023B  
                   __ptext26 00D9                     __ptext18 0589                     __ptext27 04FB  
                   __ptext19 058D                     __ptext28 035D       prepheral_testing@i_204 00A5  
               ??_selec_7seg 0045                     _evaluate 0427              ?_DEL_write_7seg 00B3  
              __size_of_main 00B9                ??i1_heater_on 0070                 ??_reset_lm35 0070  
         prepheral_testing@i 00A3                ??i1_cooler_on 0070        __end_of_init_switches 0594  
                   _sw_check 0566                  ??_heater_on 0045           DEL_write_7seg@time 00B5  
         __end_of_selec_7seg 054B                  ??_cooler_on 0045         __end_ofi1_heater_off 0591  
                ??_init_7seg 0045                  ??_init_lm35 0045           __end_of_reset_lm35 059D  
                ??_read_lm35 0072         __end_ofi1_cooler_off 05A1                 ??_start_lm35 00A0  
          start_lm35@channle 0045                     intlevel1 0000             ___lwmod@dividend 00A2  
          DEL_write_7seg@val 00B3                 ??_write_7seg 00AF          __end_ofi1_heater_on 058D  
         __end_of_start_lm35 04FB          __end_ofi1_cooler_on 059A              ___lwmod@divisor 00A0  
            ___lwmod@counter 00A4      _display_desirered_value 00BE           __end_of_write_7seg 0427  
            DEL_write_7seg@i 00B7  
